from .dummy_godot_class import *
from typing import TypeVar, Literal, overload

T = TypeVar("T")


class ExtendsHint[T]:
    @property
    def owner(self) -> T: ...

@overload
def Extends(cls: Literal['Nil']) -> type[ExtendsHint[Nil]]: ...
@overload
def Extends(cls: Literal['bool']) -> type[ExtendsHint[bool]]: ...
@overload
def Extends(cls: Literal['int']) -> type[ExtendsHint[int]]: ...
@overload
def Extends(cls: Literal['float']) -> type[ExtendsHint[float]]: ...
@overload
def Extends(cls: Literal['String']) -> type[ExtendsHint[String]]: ...
@overload
def Extends(cls: Literal['Vector2']) -> type[ExtendsHint[Vector2]]: ...
@overload
def Extends(cls: Literal['Vector2i']) -> type[ExtendsHint[Vector2i]]: ...
@overload
def Extends(cls: Literal['Rect2']) -> type[ExtendsHint[Rect2]]: ...
@overload
def Extends(cls: Literal['Rect2i']) -> type[ExtendsHint[Rect2i]]: ...
@overload
def Extends(cls: Literal['Vector3']) -> type[ExtendsHint[Vector3]]: ...
@overload
def Extends(cls: Literal['Vector3i']) -> type[ExtendsHint[Vector3i]]: ...
@overload
def Extends(cls: Literal['Transform2D']) -> type[ExtendsHint[Transform2D]]: ...
@overload
def Extends(cls: Literal['Vector4']) -> type[ExtendsHint[Vector4]]: ...
@overload
def Extends(cls: Literal['Vector4i']) -> type[ExtendsHint[Vector4i]]: ...
@overload
def Extends(cls: Literal['Plane']) -> type[ExtendsHint[Plane]]: ...
@overload
def Extends(cls: Literal['Quaternion']) -> type[ExtendsHint[Quaternion]]: ...
@overload
def Extends(cls: Literal['AABB']) -> type[ExtendsHint[AABB]]: ...
@overload
def Extends(cls: Literal['Basis']) -> type[ExtendsHint[Basis]]: ...
@overload
def Extends(cls: Literal['Transform3D']) -> type[ExtendsHint[Transform3D]]: ...
@overload
def Extends(cls: Literal['Projection']) -> type[ExtendsHint[Projection]]: ...
@overload
def Extends(cls: Literal['Color']) -> type[ExtendsHint[Color]]: ...
@overload
def Extends(cls: Literal['StringName']) -> type[ExtendsHint[StringName]]: ...
@overload
def Extends(cls: Literal['NodePath']) -> type[ExtendsHint[NodePath]]: ...
@overload
def Extends(cls: Literal['RID']) -> type[ExtendsHint[RID]]: ...
@overload
def Extends(cls: Literal['Callable']) -> type[ExtendsHint[Callable]]: ...
@overload
def Extends(cls: Literal['Signal']) -> type[ExtendsHint[Signal]]: ...
@overload
def Extends(cls: Literal['Dictionary']) -> type[ExtendsHint[Dictionary]]: ...
@overload
def Extends(cls: Literal['Array']) -> type[ExtendsHint[Array]]: ...
@overload
def Extends(cls: Literal['PackedByteArray']) -> type[ExtendsHint[PackedByteArray]]: ...
@overload
def Extends(cls: Literal['PackedInt32Array']) -> type[ExtendsHint[PackedInt32Array]]: ...
@overload
def Extends(cls: Literal['PackedInt64Array']) -> type[ExtendsHint[PackedInt64Array]]: ...
@overload
def Extends(cls: Literal['PackedFloat32Array']) -> type[ExtendsHint[PackedFloat32Array]]: ...
@overload
def Extends(cls: Literal['PackedFloat64Array']) -> type[ExtendsHint[PackedFloat64Array]]: ...
@overload
def Extends(cls: Literal['PackedStringArray']) -> type[ExtendsHint[PackedStringArray]]: ...
@overload
def Extends(cls: Literal['PackedVector2Array']) -> type[ExtendsHint[PackedVector2Array]]: ...
@overload
def Extends(cls: Literal['PackedVector3Array']) -> type[ExtendsHint[PackedVector3Array]]: ...
@overload
def Extends(cls: Literal['PackedColorArray']) -> type[ExtendsHint[PackedColorArray]]: ...
@overload
def Extends(cls: Literal['PackedVector4Array']) -> type[ExtendsHint[PackedVector4Array]]: ...
@overload
def Extends(cls: Literal['AESContext']) -> type[ExtendsHint[AESContext]]: ...
@overload
def Extends(cls: Literal['AStar2D']) -> type[ExtendsHint[AStar2D]]: ...
@overload
def Extends(cls: Literal['AStar3D']) -> type[ExtendsHint[AStar3D]]: ...
@overload
def Extends(cls: Literal['AStarGrid2D']) -> type[ExtendsHint[AStarGrid2D]]: ...
@overload
def Extends(cls: Literal['AcceptDialog']) -> type[ExtendsHint[AcceptDialog]]: ...
@overload
def Extends(cls: Literal['AnimatableBody2D']) -> type[ExtendsHint[AnimatableBody2D]]: ...
@overload
def Extends(cls: Literal['AnimatableBody3D']) -> type[ExtendsHint[AnimatableBody3D]]: ...
@overload
def Extends(cls: Literal['AnimatedSprite2D']) -> type[ExtendsHint[AnimatedSprite2D]]: ...
@overload
def Extends(cls: Literal['AnimatedSprite3D']) -> type[ExtendsHint[AnimatedSprite3D]]: ...
@overload
def Extends(cls: Literal['AnimatedTexture']) -> type[ExtendsHint[AnimatedTexture]]: ...
@overload
def Extends(cls: Literal['Animation']) -> type[ExtendsHint[Animation]]: ...
@overload
def Extends(cls: Literal['AnimationLibrary']) -> type[ExtendsHint[AnimationLibrary]]: ...
@overload
def Extends(cls: Literal['AnimationMixer']) -> type[ExtendsHint[AnimationMixer]]: ...
@overload
def Extends(cls: Literal['AnimationNode']) -> type[ExtendsHint[AnimationNode]]: ...
@overload
def Extends(cls: Literal['AnimationNodeAdd2']) -> type[ExtendsHint[AnimationNodeAdd2]]: ...
@overload
def Extends(cls: Literal['AnimationNodeAdd3']) -> type[ExtendsHint[AnimationNodeAdd3]]: ...
@overload
def Extends(cls: Literal['AnimationNodeAnimation']) -> type[ExtendsHint[AnimationNodeAnimation]]: ...
@overload
def Extends(cls: Literal['AnimationNodeBlend2']) -> type[ExtendsHint[AnimationNodeBlend2]]: ...
@overload
def Extends(cls: Literal['AnimationNodeBlend3']) -> type[ExtendsHint[AnimationNodeBlend3]]: ...
@overload
def Extends(cls: Literal['AnimationNodeBlendSpace1D']) -> type[ExtendsHint[AnimationNodeBlendSpace1D]]: ...
@overload
def Extends(cls: Literal['AnimationNodeBlendSpace2D']) -> type[ExtendsHint[AnimationNodeBlendSpace2D]]: ...
@overload
def Extends(cls: Literal['AnimationNodeBlendTree']) -> type[ExtendsHint[AnimationNodeBlendTree]]: ...
@overload
def Extends(cls: Literal['AnimationNodeExtension']) -> type[ExtendsHint[AnimationNodeExtension]]: ...
@overload
def Extends(cls: Literal['AnimationNodeOneShot']) -> type[ExtendsHint[AnimationNodeOneShot]]: ...
@overload
def Extends(cls: Literal['AnimationNodeOutput']) -> type[ExtendsHint[AnimationNodeOutput]]: ...
@overload
def Extends(cls: Literal['AnimationNodeStateMachine']) -> type[ExtendsHint[AnimationNodeStateMachine]]: ...
@overload
def Extends(cls: Literal['AnimationNodeStateMachinePlayback']) -> type[ExtendsHint[AnimationNodeStateMachinePlayback]]: ...
@overload
def Extends(cls: Literal['AnimationNodeStateMachineTransition']) -> type[ExtendsHint[AnimationNodeStateMachineTransition]]: ...
@overload
def Extends(cls: Literal['AnimationNodeSub2']) -> type[ExtendsHint[AnimationNodeSub2]]: ...
@overload
def Extends(cls: Literal['AnimationNodeSync']) -> type[ExtendsHint[AnimationNodeSync]]: ...
@overload
def Extends(cls: Literal['AnimationNodeTimeScale']) -> type[ExtendsHint[AnimationNodeTimeScale]]: ...
@overload
def Extends(cls: Literal['AnimationNodeTimeSeek']) -> type[ExtendsHint[AnimationNodeTimeSeek]]: ...
@overload
def Extends(cls: Literal['AnimationNodeTransition']) -> type[ExtendsHint[AnimationNodeTransition]]: ...
@overload
def Extends(cls: Literal['AnimationPlayer']) -> type[ExtendsHint[AnimationPlayer]]: ...
@overload
def Extends(cls: Literal['AnimationRootNode']) -> type[ExtendsHint[AnimationRootNode]]: ...
@overload
def Extends(cls: Literal['AnimationTree']) -> type[ExtendsHint[AnimationTree]]: ...
@overload
def Extends(cls: Literal['Area2D']) -> type[ExtendsHint[Area2D]]: ...
@overload
def Extends(cls: Literal['Area3D']) -> type[ExtendsHint[Area3D]]: ...
@overload
def Extends(cls: Literal['ArrayMesh']) -> type[ExtendsHint[ArrayMesh]]: ...
@overload
def Extends(cls: Literal['ArrayOccluder3D']) -> type[ExtendsHint[ArrayOccluder3D]]: ...
@overload
def Extends(cls: Literal['AspectRatioContainer']) -> type[ExtendsHint[AspectRatioContainer]]: ...
@overload
def Extends(cls: Literal['AtlasTexture']) -> type[ExtendsHint[AtlasTexture]]: ...
@overload
def Extends(cls: Literal['AudioBusLayout']) -> type[ExtendsHint[AudioBusLayout]]: ...
@overload
def Extends(cls: Literal['AudioEffect']) -> type[ExtendsHint[AudioEffect]]: ...
@overload
def Extends(cls: Literal['AudioEffectAmplify']) -> type[ExtendsHint[AudioEffectAmplify]]: ...
@overload
def Extends(cls: Literal['AudioEffectBandLimitFilter']) -> type[ExtendsHint[AudioEffectBandLimitFilter]]: ...
@overload
def Extends(cls: Literal['AudioEffectBandPassFilter']) -> type[ExtendsHint[AudioEffectBandPassFilter]]: ...
@overload
def Extends(cls: Literal['AudioEffectCapture']) -> type[ExtendsHint[AudioEffectCapture]]: ...
@overload
def Extends(cls: Literal['AudioEffectChorus']) -> type[ExtendsHint[AudioEffectChorus]]: ...
@overload
def Extends(cls: Literal['AudioEffectCompressor']) -> type[ExtendsHint[AudioEffectCompressor]]: ...
@overload
def Extends(cls: Literal['AudioEffectDelay']) -> type[ExtendsHint[AudioEffectDelay]]: ...
@overload
def Extends(cls: Literal['AudioEffectDistortion']) -> type[ExtendsHint[AudioEffectDistortion]]: ...
@overload
def Extends(cls: Literal['AudioEffectEQ']) -> type[ExtendsHint[AudioEffectEQ]]: ...
@overload
def Extends(cls: Literal['AudioEffectEQ10']) -> type[ExtendsHint[AudioEffectEQ10]]: ...
@overload
def Extends(cls: Literal['AudioEffectEQ21']) -> type[ExtendsHint[AudioEffectEQ21]]: ...
@overload
def Extends(cls: Literal['AudioEffectEQ6']) -> type[ExtendsHint[AudioEffectEQ6]]: ...
@overload
def Extends(cls: Literal['AudioEffectFilter']) -> type[ExtendsHint[AudioEffectFilter]]: ...
@overload
def Extends(cls: Literal['AudioEffectHardLimiter']) -> type[ExtendsHint[AudioEffectHardLimiter]]: ...
@overload
def Extends(cls: Literal['AudioEffectHighPassFilter']) -> type[ExtendsHint[AudioEffectHighPassFilter]]: ...
@overload
def Extends(cls: Literal['AudioEffectHighShelfFilter']) -> type[ExtendsHint[AudioEffectHighShelfFilter]]: ...
@overload
def Extends(cls: Literal['AudioEffectInstance']) -> type[ExtendsHint[AudioEffectInstance]]: ...
@overload
def Extends(cls: Literal['AudioEffectLimiter']) -> type[ExtendsHint[AudioEffectLimiter]]: ...
@overload
def Extends(cls: Literal['AudioEffectLowPassFilter']) -> type[ExtendsHint[AudioEffectLowPassFilter]]: ...
@overload
def Extends(cls: Literal['AudioEffectLowShelfFilter']) -> type[ExtendsHint[AudioEffectLowShelfFilter]]: ...
@overload
def Extends(cls: Literal['AudioEffectNotchFilter']) -> type[ExtendsHint[AudioEffectNotchFilter]]: ...
@overload
def Extends(cls: Literal['AudioEffectPanner']) -> type[ExtendsHint[AudioEffectPanner]]: ...
@overload
def Extends(cls: Literal['AudioEffectPhaser']) -> type[ExtendsHint[AudioEffectPhaser]]: ...
@overload
def Extends(cls: Literal['AudioEffectPitchShift']) -> type[ExtendsHint[AudioEffectPitchShift]]: ...
@overload
def Extends(cls: Literal['AudioEffectRecord']) -> type[ExtendsHint[AudioEffectRecord]]: ...
@overload
def Extends(cls: Literal['AudioEffectReverb']) -> type[ExtendsHint[AudioEffectReverb]]: ...
@overload
def Extends(cls: Literal['AudioEffectSpectrumAnalyzer']) -> type[ExtendsHint[AudioEffectSpectrumAnalyzer]]: ...
@overload
def Extends(cls: Literal['AudioEffectSpectrumAnalyzerInstance']) -> type[ExtendsHint[AudioEffectSpectrumAnalyzerInstance]]: ...
@overload
def Extends(cls: Literal['AudioEffectStereoEnhance']) -> type[ExtendsHint[AudioEffectStereoEnhance]]: ...
@overload
def Extends(cls: Literal['AudioListener2D']) -> type[ExtendsHint[AudioListener2D]]: ...
@overload
def Extends(cls: Literal['AudioListener3D']) -> type[ExtendsHint[AudioListener3D]]: ...
@overload
def Extends(cls: Literal['AudioSample']) -> type[ExtendsHint[AudioSample]]: ...
@overload
def Extends(cls: Literal['AudioSamplePlayback']) -> type[ExtendsHint[AudioSamplePlayback]]: ...
@overload
def Extends(cls: Literal['AudioServer']) -> type[ExtendsHint[AudioServer]]: ...
@overload
def Extends(cls: Literal['AudioStream']) -> type[ExtendsHint[AudioStream]]: ...
@overload
def Extends(cls: Literal['AudioStreamGenerator']) -> type[ExtendsHint[AudioStreamGenerator]]: ...
@overload
def Extends(cls: Literal['AudioStreamGeneratorPlayback']) -> type[ExtendsHint[AudioStreamGeneratorPlayback]]: ...
@overload
def Extends(cls: Literal['AudioStreamInteractive']) -> type[ExtendsHint[AudioStreamInteractive]]: ...
@overload
def Extends(cls: Literal['AudioStreamMP3']) -> type[ExtendsHint[AudioStreamMP3]]: ...
@overload
def Extends(cls: Literal['AudioStreamMicrophone']) -> type[ExtendsHint[AudioStreamMicrophone]]: ...
@overload
def Extends(cls: Literal['AudioStreamOggVorbis']) -> type[ExtendsHint[AudioStreamOggVorbis]]: ...
@overload
def Extends(cls: Literal['AudioStreamPlayback']) -> type[ExtendsHint[AudioStreamPlayback]]: ...
@overload
def Extends(cls: Literal['AudioStreamPlaybackInteractive']) -> type[ExtendsHint[AudioStreamPlaybackInteractive]]: ...
@overload
def Extends(cls: Literal['AudioStreamPlaybackOggVorbis']) -> type[ExtendsHint[AudioStreamPlaybackOggVorbis]]: ...
@overload
def Extends(cls: Literal['AudioStreamPlaybackPlaylist']) -> type[ExtendsHint[AudioStreamPlaybackPlaylist]]: ...
@overload
def Extends(cls: Literal['AudioStreamPlaybackPolyphonic']) -> type[ExtendsHint[AudioStreamPlaybackPolyphonic]]: ...
@overload
def Extends(cls: Literal['AudioStreamPlaybackResampled']) -> type[ExtendsHint[AudioStreamPlaybackResampled]]: ...
@overload
def Extends(cls: Literal['AudioStreamPlaybackSynchronized']) -> type[ExtendsHint[AudioStreamPlaybackSynchronized]]: ...
@overload
def Extends(cls: Literal['AudioStreamPlayer']) -> type[ExtendsHint[AudioStreamPlayer]]: ...
@overload
def Extends(cls: Literal['AudioStreamPlayer2D']) -> type[ExtendsHint[AudioStreamPlayer2D]]: ...
@overload
def Extends(cls: Literal['AudioStreamPlayer3D']) -> type[ExtendsHint[AudioStreamPlayer3D]]: ...
@overload
def Extends(cls: Literal['AudioStreamPlaylist']) -> type[ExtendsHint[AudioStreamPlaylist]]: ...
@overload
def Extends(cls: Literal['AudioStreamPolyphonic']) -> type[ExtendsHint[AudioStreamPolyphonic]]: ...
@overload
def Extends(cls: Literal['AudioStreamRandomizer']) -> type[ExtendsHint[AudioStreamRandomizer]]: ...
@overload
def Extends(cls: Literal['AudioStreamSynchronized']) -> type[ExtendsHint[AudioStreamSynchronized]]: ...
@overload
def Extends(cls: Literal['AudioStreamWAV']) -> type[ExtendsHint[AudioStreamWAV]]: ...
@overload
def Extends(cls: Literal['BackBufferCopy']) -> type[ExtendsHint[BackBufferCopy]]: ...
@overload
def Extends(cls: Literal['BaseButton']) -> type[ExtendsHint[BaseButton]]: ...
@overload
def Extends(cls: Literal['BaseMaterial3D']) -> type[ExtendsHint[BaseMaterial3D]]: ...
@overload
def Extends(cls: Literal['BitMap']) -> type[ExtendsHint[BitMap]]: ...
@overload
def Extends(cls: Literal['Bone2D']) -> type[ExtendsHint[Bone2D]]: ...
@overload
def Extends(cls: Literal['BoneAttachment3D']) -> type[ExtendsHint[BoneAttachment3D]]: ...
@overload
def Extends(cls: Literal['BoneMap']) -> type[ExtendsHint[BoneMap]]: ...
@overload
def Extends(cls: Literal['BoxContainer']) -> type[ExtendsHint[BoxContainer]]: ...
@overload
def Extends(cls: Literal['BoxMesh']) -> type[ExtendsHint[BoxMesh]]: ...
@overload
def Extends(cls: Literal['BoxOccluder3D']) -> type[ExtendsHint[BoxOccluder3D]]: ...
@overload
def Extends(cls: Literal['BoxShape3D']) -> type[ExtendsHint[BoxShape3D]]: ...
@overload
def Extends(cls: Literal['Button']) -> type[ExtendsHint[Button]]: ...
@overload
def Extends(cls: Literal['ButtonGroup']) -> type[ExtendsHint[ButtonGroup]]: ...
@overload
def Extends(cls: Literal['CPUParticles2D']) -> type[ExtendsHint[CPUParticles2D]]: ...
@overload
def Extends(cls: Literal['CPUParticles3D']) -> type[ExtendsHint[CPUParticles3D]]: ...
@overload
def Extends(cls: Literal['CSGBox3D']) -> type[ExtendsHint[CSGBox3D]]: ...
@overload
def Extends(cls: Literal['CSGCombiner3D']) -> type[ExtendsHint[CSGCombiner3D]]: ...
@overload
def Extends(cls: Literal['CSGCylinder3D']) -> type[ExtendsHint[CSGCylinder3D]]: ...
@overload
def Extends(cls: Literal['CSGMesh3D']) -> type[ExtendsHint[CSGMesh3D]]: ...
@overload
def Extends(cls: Literal['CSGPolygon3D']) -> type[ExtendsHint[CSGPolygon3D]]: ...
@overload
def Extends(cls: Literal['CSGPrimitive3D']) -> type[ExtendsHint[CSGPrimitive3D]]: ...
@overload
def Extends(cls: Literal['CSGShape3D']) -> type[ExtendsHint[CSGShape3D]]: ...
@overload
def Extends(cls: Literal['CSGSphere3D']) -> type[ExtendsHint[CSGSphere3D]]: ...
@overload
def Extends(cls: Literal['CSGTorus3D']) -> type[ExtendsHint[CSGTorus3D]]: ...
@overload
def Extends(cls: Literal['CallbackTweener']) -> type[ExtendsHint[CallbackTweener]]: ...
@overload
def Extends(cls: Literal['Camera2D']) -> type[ExtendsHint[Camera2D]]: ...
@overload
def Extends(cls: Literal['Camera3D']) -> type[ExtendsHint[Camera3D]]: ...
@overload
def Extends(cls: Literal['CameraAttributes']) -> type[ExtendsHint[CameraAttributes]]: ...
@overload
def Extends(cls: Literal['CameraAttributesPhysical']) -> type[ExtendsHint[CameraAttributesPhysical]]: ...
@overload
def Extends(cls: Literal['CameraAttributesPractical']) -> type[ExtendsHint[CameraAttributesPractical]]: ...
@overload
def Extends(cls: Literal['CameraFeed']) -> type[ExtendsHint[CameraFeed]]: ...
@overload
def Extends(cls: Literal['CameraServer']) -> type[ExtendsHint[CameraServer]]: ...
@overload
def Extends(cls: Literal['CameraTexture']) -> type[ExtendsHint[CameraTexture]]: ...
@overload
def Extends(cls: Literal['CanvasGroup']) -> type[ExtendsHint[CanvasGroup]]: ...
@overload
def Extends(cls: Literal['CanvasItem']) -> type[ExtendsHint[CanvasItem]]: ...
@overload
def Extends(cls: Literal['CanvasItemMaterial']) -> type[ExtendsHint[CanvasItemMaterial]]: ...
@overload
def Extends(cls: Literal['CanvasLayer']) -> type[ExtendsHint[CanvasLayer]]: ...
@overload
def Extends(cls: Literal['CanvasModulate']) -> type[ExtendsHint[CanvasModulate]]: ...
@overload
def Extends(cls: Literal['CanvasTexture']) -> type[ExtendsHint[CanvasTexture]]: ...
@overload
def Extends(cls: Literal['CapsuleMesh']) -> type[ExtendsHint[CapsuleMesh]]: ...
@overload
def Extends(cls: Literal['CapsuleShape2D']) -> type[ExtendsHint[CapsuleShape2D]]: ...
@overload
def Extends(cls: Literal['CapsuleShape3D']) -> type[ExtendsHint[CapsuleShape3D]]: ...
@overload
def Extends(cls: Literal['CenterContainer']) -> type[ExtendsHint[CenterContainer]]: ...
@overload
def Extends(cls: Literal['CharFXTransform']) -> type[ExtendsHint[CharFXTransform]]: ...
@overload
def Extends(cls: Literal['CharacterBody2D']) -> type[ExtendsHint[CharacterBody2D]]: ...
@overload
def Extends(cls: Literal['CharacterBody3D']) -> type[ExtendsHint[CharacterBody3D]]: ...
@overload
def Extends(cls: Literal['CheckBox']) -> type[ExtendsHint[CheckBox]]: ...
@overload
def Extends(cls: Literal['CheckButton']) -> type[ExtendsHint[CheckButton]]: ...
@overload
def Extends(cls: Literal['CircleShape2D']) -> type[ExtendsHint[CircleShape2D]]: ...
@overload
def Extends(cls: Literal['ClassDB']) -> type[ExtendsHint[ClassDB]]: ...
@overload
def Extends(cls: Literal['CodeEdit']) -> type[ExtendsHint[CodeEdit]]: ...
@overload
def Extends(cls: Literal['CodeHighlighter']) -> type[ExtendsHint[CodeHighlighter]]: ...
@overload
def Extends(cls: Literal['CollisionObject2D']) -> type[ExtendsHint[CollisionObject2D]]: ...
@overload
def Extends(cls: Literal['CollisionObject3D']) -> type[ExtendsHint[CollisionObject3D]]: ...
@overload
def Extends(cls: Literal['CollisionPolygon2D']) -> type[ExtendsHint[CollisionPolygon2D]]: ...
@overload
def Extends(cls: Literal['CollisionPolygon3D']) -> type[ExtendsHint[CollisionPolygon3D]]: ...
@overload
def Extends(cls: Literal['CollisionShape2D']) -> type[ExtendsHint[CollisionShape2D]]: ...
@overload
def Extends(cls: Literal['CollisionShape3D']) -> type[ExtendsHint[CollisionShape3D]]: ...
@overload
def Extends(cls: Literal['ColorPalette']) -> type[ExtendsHint[ColorPalette]]: ...
@overload
def Extends(cls: Literal['ColorPicker']) -> type[ExtendsHint[ColorPicker]]: ...
@overload
def Extends(cls: Literal['ColorPickerButton']) -> type[ExtendsHint[ColorPickerButton]]: ...
@overload
def Extends(cls: Literal['ColorRect']) -> type[ExtendsHint[ColorRect]]: ...
@overload
def Extends(cls: Literal['Compositor']) -> type[ExtendsHint[Compositor]]: ...
@overload
def Extends(cls: Literal['CompositorEffect']) -> type[ExtendsHint[CompositorEffect]]: ...
@overload
def Extends(cls: Literal['CompressedCubemap']) -> type[ExtendsHint[CompressedCubemap]]: ...
@overload
def Extends(cls: Literal['CompressedCubemapArray']) -> type[ExtendsHint[CompressedCubemapArray]]: ...
@overload
def Extends(cls: Literal['CompressedTexture2D']) -> type[ExtendsHint[CompressedTexture2D]]: ...
@overload
def Extends(cls: Literal['CompressedTexture2DArray']) -> type[ExtendsHint[CompressedTexture2DArray]]: ...
@overload
def Extends(cls: Literal['CompressedTexture3D']) -> type[ExtendsHint[CompressedTexture3D]]: ...
@overload
def Extends(cls: Literal['CompressedTextureLayered']) -> type[ExtendsHint[CompressedTextureLayered]]: ...
@overload
def Extends(cls: Literal['ConcavePolygonShape2D']) -> type[ExtendsHint[ConcavePolygonShape2D]]: ...
@overload
def Extends(cls: Literal['ConcavePolygonShape3D']) -> type[ExtendsHint[ConcavePolygonShape3D]]: ...
@overload
def Extends(cls: Literal['ConeTwistJoint3D']) -> type[ExtendsHint[ConeTwistJoint3D]]: ...
@overload
def Extends(cls: Literal['ConfigFile']) -> type[ExtendsHint[ConfigFile]]: ...
@overload
def Extends(cls: Literal['ConfirmationDialog']) -> type[ExtendsHint[ConfirmationDialog]]: ...
@overload
def Extends(cls: Literal['Container']) -> type[ExtendsHint[Container]]: ...
@overload
def Extends(cls: Literal['Control']) -> type[ExtendsHint[Control]]: ...
@overload
def Extends(cls: Literal['ConvexPolygonShape2D']) -> type[ExtendsHint[ConvexPolygonShape2D]]: ...
@overload
def Extends(cls: Literal['ConvexPolygonShape3D']) -> type[ExtendsHint[ConvexPolygonShape3D]]: ...
@overload
def Extends(cls: Literal['Crypto']) -> type[ExtendsHint[Crypto]]: ...
@overload
def Extends(cls: Literal['CryptoKey']) -> type[ExtendsHint[CryptoKey]]: ...
@overload
def Extends(cls: Literal['Cubemap']) -> type[ExtendsHint[Cubemap]]: ...
@overload
def Extends(cls: Literal['CubemapArray']) -> type[ExtendsHint[CubemapArray]]: ...
@overload
def Extends(cls: Literal['Curve']) -> type[ExtendsHint[Curve]]: ...
@overload
def Extends(cls: Literal['Curve2D']) -> type[ExtendsHint[Curve2D]]: ...
@overload
def Extends(cls: Literal['Curve3D']) -> type[ExtendsHint[Curve3D]]: ...
@overload
def Extends(cls: Literal['CurveTexture']) -> type[ExtendsHint[CurveTexture]]: ...
@overload
def Extends(cls: Literal['CurveXYZTexture']) -> type[ExtendsHint[CurveXYZTexture]]: ...
@overload
def Extends(cls: Literal['CylinderMesh']) -> type[ExtendsHint[CylinderMesh]]: ...
@overload
def Extends(cls: Literal['CylinderShape3D']) -> type[ExtendsHint[CylinderShape3D]]: ...
@overload
def Extends(cls: Literal['DTLSServer']) -> type[ExtendsHint[DTLSServer]]: ...
@overload
def Extends(cls: Literal['DampedSpringJoint2D']) -> type[ExtendsHint[DampedSpringJoint2D]]: ...
@overload
def Extends(cls: Literal['Decal']) -> type[ExtendsHint[Decal]]: ...
@overload
def Extends(cls: Literal['DirAccess']) -> type[ExtendsHint[DirAccess]]: ...
@overload
def Extends(cls: Literal['DirectionalLight2D']) -> type[ExtendsHint[DirectionalLight2D]]: ...
@overload
def Extends(cls: Literal['DirectionalLight3D']) -> type[ExtendsHint[DirectionalLight3D]]: ...
@overload
def Extends(cls: Literal['DisplayServer']) -> type[ExtendsHint[DisplayServer]]: ...
@overload
def Extends(cls: Literal['ENetConnection']) -> type[ExtendsHint[ENetConnection]]: ...
@overload
def Extends(cls: Literal['ENetMultiplayerPeer']) -> type[ExtendsHint[ENetMultiplayerPeer]]: ...
@overload
def Extends(cls: Literal['ENetPacketPeer']) -> type[ExtendsHint[ENetPacketPeer]]: ...
@overload
def Extends(cls: Literal['EditorCommandPalette']) -> type[ExtendsHint[EditorCommandPalette]]: ...
@overload
def Extends(cls: Literal['EditorContextMenuPlugin']) -> type[ExtendsHint[EditorContextMenuPlugin]]: ...
@overload
def Extends(cls: Literal['EditorDebuggerPlugin']) -> type[ExtendsHint[EditorDebuggerPlugin]]: ...
@overload
def Extends(cls: Literal['EditorDebuggerSession']) -> type[ExtendsHint[EditorDebuggerSession]]: ...
@overload
def Extends(cls: Literal['EditorExportPlatform']) -> type[ExtendsHint[EditorExportPlatform]]: ...
@overload
def Extends(cls: Literal['EditorExportPlatformAndroid']) -> type[ExtendsHint[EditorExportPlatformAndroid]]: ...
@overload
def Extends(cls: Literal['EditorExportPlatformExtension']) -> type[ExtendsHint[EditorExportPlatformExtension]]: ...
@overload
def Extends(cls: Literal['EditorExportPlatformIOS']) -> type[ExtendsHint[EditorExportPlatformIOS]]: ...
@overload
def Extends(cls: Literal['EditorExportPlatformLinuxBSD']) -> type[ExtendsHint[EditorExportPlatformLinuxBSD]]: ...
@overload
def Extends(cls: Literal['EditorExportPlatformMacOS']) -> type[ExtendsHint[EditorExportPlatformMacOS]]: ...
@overload
def Extends(cls: Literal['EditorExportPlatformPC']) -> type[ExtendsHint[EditorExportPlatformPC]]: ...
@overload
def Extends(cls: Literal['EditorExportPlatformWeb']) -> type[ExtendsHint[EditorExportPlatformWeb]]: ...
@overload
def Extends(cls: Literal['EditorExportPlatformWindows']) -> type[ExtendsHint[EditorExportPlatformWindows]]: ...
@overload
def Extends(cls: Literal['EditorExportPlugin']) -> type[ExtendsHint[EditorExportPlugin]]: ...
@overload
def Extends(cls: Literal['EditorExportPreset']) -> type[ExtendsHint[EditorExportPreset]]: ...
@overload
def Extends(cls: Literal['EditorFeatureProfile']) -> type[ExtendsHint[EditorFeatureProfile]]: ...
@overload
def Extends(cls: Literal['EditorFileDialog']) -> type[ExtendsHint[EditorFileDialog]]: ...
@overload
def Extends(cls: Literal['EditorFileSystem']) -> type[ExtendsHint[EditorFileSystem]]: ...
@overload
def Extends(cls: Literal['EditorFileSystemDirectory']) -> type[ExtendsHint[EditorFileSystemDirectory]]: ...
@overload
def Extends(cls: Literal['EditorFileSystemImportFormatSupportQuery']) -> type[ExtendsHint[EditorFileSystemImportFormatSupportQuery]]: ...
@overload
def Extends(cls: Literal['EditorImportPlugin']) -> type[ExtendsHint[EditorImportPlugin]]: ...
@overload
def Extends(cls: Literal['EditorInspector']) -> type[ExtendsHint[EditorInspector]]: ...
@overload
def Extends(cls: Literal['EditorInspectorPlugin']) -> type[ExtendsHint[EditorInspectorPlugin]]: ...
@overload
def Extends(cls: Literal['EditorInterface']) -> type[ExtendsHint[EditorInterface]]: ...
@overload
def Extends(cls: Literal['EditorNode3DGizmo']) -> type[ExtendsHint[EditorNode3DGizmo]]: ...
@overload
def Extends(cls: Literal['EditorNode3DGizmoPlugin']) -> type[ExtendsHint[EditorNode3DGizmoPlugin]]: ...
@overload
def Extends(cls: Literal['EditorPaths']) -> type[ExtendsHint[EditorPaths]]: ...
@overload
def Extends(cls: Literal['EditorPlugin']) -> type[ExtendsHint[EditorPlugin]]: ...
@overload
def Extends(cls: Literal['EditorProperty']) -> type[ExtendsHint[EditorProperty]]: ...
@overload
def Extends(cls: Literal['EditorResourceConversionPlugin']) -> type[ExtendsHint[EditorResourceConversionPlugin]]: ...
@overload
def Extends(cls: Literal['EditorResourcePicker']) -> type[ExtendsHint[EditorResourcePicker]]: ...
@overload
def Extends(cls: Literal['EditorResourcePreview']) -> type[ExtendsHint[EditorResourcePreview]]: ...
@overload
def Extends(cls: Literal['EditorResourcePreviewGenerator']) -> type[ExtendsHint[EditorResourcePreviewGenerator]]: ...
@overload
def Extends(cls: Literal['EditorResourceTooltipPlugin']) -> type[ExtendsHint[EditorResourceTooltipPlugin]]: ...
@overload
def Extends(cls: Literal['EditorSceneFormatImporter']) -> type[ExtendsHint[EditorSceneFormatImporter]]: ...
@overload
def Extends(cls: Literal['EditorSceneFormatImporterBlend']) -> type[ExtendsHint[EditorSceneFormatImporterBlend]]: ...
@overload
def Extends(cls: Literal['EditorSceneFormatImporterFBX2GLTF']) -> type[ExtendsHint[EditorSceneFormatImporterFBX2GLTF]]: ...
@overload
def Extends(cls: Literal['EditorSceneFormatImporterGLTF']) -> type[ExtendsHint[EditorSceneFormatImporterGLTF]]: ...
@overload
def Extends(cls: Literal['EditorSceneFormatImporterUFBX']) -> type[ExtendsHint[EditorSceneFormatImporterUFBX]]: ...
@overload
def Extends(cls: Literal['EditorScenePostImport']) -> type[ExtendsHint[EditorScenePostImport]]: ...
@overload
def Extends(cls: Literal['EditorScenePostImportPlugin']) -> type[ExtendsHint[EditorScenePostImportPlugin]]: ...
@overload
def Extends(cls: Literal['EditorScript']) -> type[ExtendsHint[EditorScript]]: ...
@overload
def Extends(cls: Literal['EditorScriptPicker']) -> type[ExtendsHint[EditorScriptPicker]]: ...
@overload
def Extends(cls: Literal['EditorSelection']) -> type[ExtendsHint[EditorSelection]]: ...
@overload
def Extends(cls: Literal['EditorSettings']) -> type[ExtendsHint[EditorSettings]]: ...
@overload
def Extends(cls: Literal['EditorSpinSlider']) -> type[ExtendsHint[EditorSpinSlider]]: ...
@overload
def Extends(cls: Literal['EditorSyntaxHighlighter']) -> type[ExtendsHint[EditorSyntaxHighlighter]]: ...
@overload
def Extends(cls: Literal['EditorToaster']) -> type[ExtendsHint[EditorToaster]]: ...
@overload
def Extends(cls: Literal['EditorTranslationParserPlugin']) -> type[ExtendsHint[EditorTranslationParserPlugin]]: ...
@overload
def Extends(cls: Literal['EditorUndoRedoManager']) -> type[ExtendsHint[EditorUndoRedoManager]]: ...
@overload
def Extends(cls: Literal['EditorVCSInterface']) -> type[ExtendsHint[EditorVCSInterface]]: ...
@overload
def Extends(cls: Literal['EncodedObjectAsID']) -> type[ExtendsHint[EncodedObjectAsID]]: ...
@overload
def Extends(cls: Literal['Engine']) -> type[ExtendsHint[Engine]]: ...
@overload
def Extends(cls: Literal['EngineDebugger']) -> type[ExtendsHint[EngineDebugger]]: ...
@overload
def Extends(cls: Literal['EngineProfiler']) -> type[ExtendsHint[EngineProfiler]]: ...
@overload
def Extends(cls: Literal['Environment']) -> type[ExtendsHint[Environment]]: ...
@overload
def Extends(cls: Literal['Expression']) -> type[ExtendsHint[Expression]]: ...
@overload
def Extends(cls: Literal['ExternalTexture']) -> type[ExtendsHint[ExternalTexture]]: ...
@overload
def Extends(cls: Literal['FBXDocument']) -> type[ExtendsHint[FBXDocument]]: ...
@overload
def Extends(cls: Literal['FBXState']) -> type[ExtendsHint[FBXState]]: ...
@overload
def Extends(cls: Literal['FastNoiseLite']) -> type[ExtendsHint[FastNoiseLite]]: ...
@overload
def Extends(cls: Literal['FileAccess']) -> type[ExtendsHint[FileAccess]]: ...
@overload
def Extends(cls: Literal['FileDialog']) -> type[ExtendsHint[FileDialog]]: ...
@overload
def Extends(cls: Literal['FileSystemDock']) -> type[ExtendsHint[FileSystemDock]]: ...
@overload
def Extends(cls: Literal['FlowContainer']) -> type[ExtendsHint[FlowContainer]]: ...
@overload
def Extends(cls: Literal['FogMaterial']) -> type[ExtendsHint[FogMaterial]]: ...
@overload
def Extends(cls: Literal['FogVolume']) -> type[ExtendsHint[FogVolume]]: ...
@overload
def Extends(cls: Literal['Font']) -> type[ExtendsHint[Font]]: ...
@overload
def Extends(cls: Literal['FontFile']) -> type[ExtendsHint[FontFile]]: ...
@overload
def Extends(cls: Literal['FontVariation']) -> type[ExtendsHint[FontVariation]]: ...
@overload
def Extends(cls: Literal['FramebufferCacheRD']) -> type[ExtendsHint[FramebufferCacheRD]]: ...
@overload
def Extends(cls: Literal['GDExtension']) -> type[ExtendsHint[GDExtension]]: ...
@overload
def Extends(cls: Literal['GDExtensionManager']) -> type[ExtendsHint[GDExtensionManager]]: ...
@overload
def Extends(cls: Literal['GDScript']) -> type[ExtendsHint[GDScript]]: ...
@overload
def Extends(cls: Literal['GDScriptSyntaxHighlighter']) -> type[ExtendsHint[GDScriptSyntaxHighlighter]]: ...
@overload
def Extends(cls: Literal['GLTFAccessor']) -> type[ExtendsHint[GLTFAccessor]]: ...
@overload
def Extends(cls: Literal['GLTFAnimation']) -> type[ExtendsHint[GLTFAnimation]]: ...
@overload
def Extends(cls: Literal['GLTFBufferView']) -> type[ExtendsHint[GLTFBufferView]]: ...
@overload
def Extends(cls: Literal['GLTFCamera']) -> type[ExtendsHint[GLTFCamera]]: ...
@overload
def Extends(cls: Literal['GLTFDocument']) -> type[ExtendsHint[GLTFDocument]]: ...
@overload
def Extends(cls: Literal['GLTFDocumentExtension']) -> type[ExtendsHint[GLTFDocumentExtension]]: ...
@overload
def Extends(cls: Literal['GLTFDocumentExtensionConvertImporterMesh']) -> type[ExtendsHint[GLTFDocumentExtensionConvertImporterMesh]]: ...
@overload
def Extends(cls: Literal['GLTFLight']) -> type[ExtendsHint[GLTFLight]]: ...
@overload
def Extends(cls: Literal['GLTFMesh']) -> type[ExtendsHint[GLTFMesh]]: ...
@overload
def Extends(cls: Literal['GLTFNode']) -> type[ExtendsHint[GLTFNode]]: ...
@overload
def Extends(cls: Literal['GLTFObjectModelProperty']) -> type[ExtendsHint[GLTFObjectModelProperty]]: ...
@overload
def Extends(cls: Literal['GLTFPhysicsBody']) -> type[ExtendsHint[GLTFPhysicsBody]]: ...
@overload
def Extends(cls: Literal['GLTFPhysicsShape']) -> type[ExtendsHint[GLTFPhysicsShape]]: ...
@overload
def Extends(cls: Literal['GLTFSkeleton']) -> type[ExtendsHint[GLTFSkeleton]]: ...
@overload
def Extends(cls: Literal['GLTFSkin']) -> type[ExtendsHint[GLTFSkin]]: ...
@overload
def Extends(cls: Literal['GLTFSpecGloss']) -> type[ExtendsHint[GLTFSpecGloss]]: ...
@overload
def Extends(cls: Literal['GLTFState']) -> type[ExtendsHint[GLTFState]]: ...
@overload
def Extends(cls: Literal['GLTFTexture']) -> type[ExtendsHint[GLTFTexture]]: ...
@overload
def Extends(cls: Literal['GLTFTextureSampler']) -> type[ExtendsHint[GLTFTextureSampler]]: ...
@overload
def Extends(cls: Literal['GPUParticles2D']) -> type[ExtendsHint[GPUParticles2D]]: ...
@overload
def Extends(cls: Literal['GPUParticles3D']) -> type[ExtendsHint[GPUParticles3D]]: ...
@overload
def Extends(cls: Literal['GPUParticlesAttractor3D']) -> type[ExtendsHint[GPUParticlesAttractor3D]]: ...
@overload
def Extends(cls: Literal['GPUParticlesAttractorBox3D']) -> type[ExtendsHint[GPUParticlesAttractorBox3D]]: ...
@overload
def Extends(cls: Literal['GPUParticlesAttractorSphere3D']) -> type[ExtendsHint[GPUParticlesAttractorSphere3D]]: ...
@overload
def Extends(cls: Literal['GPUParticlesAttractorVectorField3D']) -> type[ExtendsHint[GPUParticlesAttractorVectorField3D]]: ...
@overload
def Extends(cls: Literal['GPUParticlesCollision3D']) -> type[ExtendsHint[GPUParticlesCollision3D]]: ...
@overload
def Extends(cls: Literal['GPUParticlesCollisionBox3D']) -> type[ExtendsHint[GPUParticlesCollisionBox3D]]: ...
@overload
def Extends(cls: Literal['GPUParticlesCollisionHeightField3D']) -> type[ExtendsHint[GPUParticlesCollisionHeightField3D]]: ...
@overload
def Extends(cls: Literal['GPUParticlesCollisionSDF3D']) -> type[ExtendsHint[GPUParticlesCollisionSDF3D]]: ...
@overload
def Extends(cls: Literal['GPUParticlesCollisionSphere3D']) -> type[ExtendsHint[GPUParticlesCollisionSphere3D]]: ...
@overload
def Extends(cls: Literal['Generic6DOFJoint3D']) -> type[ExtendsHint[Generic6DOFJoint3D]]: ...
@overload
def Extends(cls: Literal['Geometry2D']) -> type[ExtendsHint[Geometry2D]]: ...
@overload
def Extends(cls: Literal['Geometry3D']) -> type[ExtendsHint[Geometry3D]]: ...
@overload
def Extends(cls: Literal['GeometryInstance3D']) -> type[ExtendsHint[GeometryInstance3D]]: ...
@overload
def Extends(cls: Literal['Gradient']) -> type[ExtendsHint[Gradient]]: ...
@overload
def Extends(cls: Literal['GradientTexture1D']) -> type[ExtendsHint[GradientTexture1D]]: ...
@overload
def Extends(cls: Literal['GradientTexture2D']) -> type[ExtendsHint[GradientTexture2D]]: ...
@overload
def Extends(cls: Literal['GraphEdit']) -> type[ExtendsHint[GraphEdit]]: ...
@overload
def Extends(cls: Literal['GraphElement']) -> type[ExtendsHint[GraphElement]]: ...
@overload
def Extends(cls: Literal['GraphFrame']) -> type[ExtendsHint[GraphFrame]]: ...
@overload
def Extends(cls: Literal['GraphNode']) -> type[ExtendsHint[GraphNode]]: ...
@overload
def Extends(cls: Literal['GridContainer']) -> type[ExtendsHint[GridContainer]]: ...
@overload
def Extends(cls: Literal['GridMap']) -> type[ExtendsHint[GridMap]]: ...
@overload
def Extends(cls: Literal['GridMapEditorPlugin']) -> type[ExtendsHint[GridMapEditorPlugin]]: ...
@overload
def Extends(cls: Literal['GrooveJoint2D']) -> type[ExtendsHint[GrooveJoint2D]]: ...
@overload
def Extends(cls: Literal['HBoxContainer']) -> type[ExtendsHint[HBoxContainer]]: ...
@overload
def Extends(cls: Literal['HFlowContainer']) -> type[ExtendsHint[HFlowContainer]]: ...
@overload
def Extends(cls: Literal['HMACContext']) -> type[ExtendsHint[HMACContext]]: ...
@overload
def Extends(cls: Literal['HScrollBar']) -> type[ExtendsHint[HScrollBar]]: ...
@overload
def Extends(cls: Literal['HSeparator']) -> type[ExtendsHint[HSeparator]]: ...
@overload
def Extends(cls: Literal['HSlider']) -> type[ExtendsHint[HSlider]]: ...
@overload
def Extends(cls: Literal['HSplitContainer']) -> type[ExtendsHint[HSplitContainer]]: ...
@overload
def Extends(cls: Literal['HTTPClient']) -> type[ExtendsHint[HTTPClient]]: ...
@overload
def Extends(cls: Literal['HTTPRequest']) -> type[ExtendsHint[HTTPRequest]]: ...
@overload
def Extends(cls: Literal['HashingContext']) -> type[ExtendsHint[HashingContext]]: ...
@overload
def Extends(cls: Literal['HeightMapShape3D']) -> type[ExtendsHint[HeightMapShape3D]]: ...
@overload
def Extends(cls: Literal['HingeJoint3D']) -> type[ExtendsHint[HingeJoint3D]]: ...
@overload
def Extends(cls: Literal['IP']) -> type[ExtendsHint[IP]]: ...
@overload
def Extends(cls: Literal['Image']) -> type[ExtendsHint[Image]]: ...
@overload
def Extends(cls: Literal['ImageFormatLoader']) -> type[ExtendsHint[ImageFormatLoader]]: ...
@overload
def Extends(cls: Literal['ImageFormatLoaderExtension']) -> type[ExtendsHint[ImageFormatLoaderExtension]]: ...
@overload
def Extends(cls: Literal['ImageTexture']) -> type[ExtendsHint[ImageTexture]]: ...
@overload
def Extends(cls: Literal['ImageTexture3D']) -> type[ExtendsHint[ImageTexture3D]]: ...
@overload
def Extends(cls: Literal['ImageTextureLayered']) -> type[ExtendsHint[ImageTextureLayered]]: ...
@overload
def Extends(cls: Literal['ImmediateMesh']) -> type[ExtendsHint[ImmediateMesh]]: ...
@overload
def Extends(cls: Literal['ImporterMesh']) -> type[ExtendsHint[ImporterMesh]]: ...
@overload
def Extends(cls: Literal['ImporterMeshInstance3D']) -> type[ExtendsHint[ImporterMeshInstance3D]]: ...
@overload
def Extends(cls: Literal['Input']) -> type[ExtendsHint[Input]]: ...
@overload
def Extends(cls: Literal['InputEvent']) -> type[ExtendsHint[InputEvent]]: ...
@overload
def Extends(cls: Literal['InputEventAction']) -> type[ExtendsHint[InputEventAction]]: ...
@overload
def Extends(cls: Literal['InputEventFromWindow']) -> type[ExtendsHint[InputEventFromWindow]]: ...
@overload
def Extends(cls: Literal['InputEventGesture']) -> type[ExtendsHint[InputEventGesture]]: ...
@overload
def Extends(cls: Literal['InputEventJoypadButton']) -> type[ExtendsHint[InputEventJoypadButton]]: ...
@overload
def Extends(cls: Literal['InputEventJoypadMotion']) -> type[ExtendsHint[InputEventJoypadMotion]]: ...
@overload
def Extends(cls: Literal['InputEventKey']) -> type[ExtendsHint[InputEventKey]]: ...
@overload
def Extends(cls: Literal['InputEventMIDI']) -> type[ExtendsHint[InputEventMIDI]]: ...
@overload
def Extends(cls: Literal['InputEventMagnifyGesture']) -> type[ExtendsHint[InputEventMagnifyGesture]]: ...
@overload
def Extends(cls: Literal['InputEventMouse']) -> type[ExtendsHint[InputEventMouse]]: ...
@overload
def Extends(cls: Literal['InputEventMouseButton']) -> type[ExtendsHint[InputEventMouseButton]]: ...
@overload
def Extends(cls: Literal['InputEventMouseMotion']) -> type[ExtendsHint[InputEventMouseMotion]]: ...
@overload
def Extends(cls: Literal['InputEventPanGesture']) -> type[ExtendsHint[InputEventPanGesture]]: ...
@overload
def Extends(cls: Literal['InputEventScreenDrag']) -> type[ExtendsHint[InputEventScreenDrag]]: ...
@overload
def Extends(cls: Literal['InputEventScreenTouch']) -> type[ExtendsHint[InputEventScreenTouch]]: ...
@overload
def Extends(cls: Literal['InputEventShortcut']) -> type[ExtendsHint[InputEventShortcut]]: ...
@overload
def Extends(cls: Literal['InputEventWithModifiers']) -> type[ExtendsHint[InputEventWithModifiers]]: ...
@overload
def Extends(cls: Literal['InputMap']) -> type[ExtendsHint[InputMap]]: ...
@overload
def Extends(cls: Literal['InstancePlaceholder']) -> type[ExtendsHint[InstancePlaceholder]]: ...
@overload
def Extends(cls: Literal['IntervalTweener']) -> type[ExtendsHint[IntervalTweener]]: ...
@overload
def Extends(cls: Literal['ItemList']) -> type[ExtendsHint[ItemList]]: ...
@overload
def Extends(cls: Literal['JNISingleton']) -> type[ExtendsHint[JNISingleton]]: ...
@overload
def Extends(cls: Literal['JSON']) -> type[ExtendsHint[JSON]]: ...
@overload
def Extends(cls: Literal['JSONRPC']) -> type[ExtendsHint[JSONRPC]]: ...
@overload
def Extends(cls: Literal['JavaClass']) -> type[ExtendsHint[JavaClass]]: ...
@overload
def Extends(cls: Literal['JavaClassWrapper']) -> type[ExtendsHint[JavaClassWrapper]]: ...
@overload
def Extends(cls: Literal['JavaObject']) -> type[ExtendsHint[JavaObject]]: ...
@overload
def Extends(cls: Literal['JavaScriptBridge']) -> type[ExtendsHint[JavaScriptBridge]]: ...
@overload
def Extends(cls: Literal['JavaScriptObject']) -> type[ExtendsHint[JavaScriptObject]]: ...
@overload
def Extends(cls: Literal['Joint2D']) -> type[ExtendsHint[Joint2D]]: ...
@overload
def Extends(cls: Literal['Joint3D']) -> type[ExtendsHint[Joint3D]]: ...
@overload
def Extends(cls: Literal['KinematicCollision2D']) -> type[ExtendsHint[KinematicCollision2D]]: ...
@overload
def Extends(cls: Literal['KinematicCollision3D']) -> type[ExtendsHint[KinematicCollision3D]]: ...
@overload
def Extends(cls: Literal['Label']) -> type[ExtendsHint[Label]]: ...
@overload
def Extends(cls: Literal['Label3D']) -> type[ExtendsHint[Label3D]]: ...
@overload
def Extends(cls: Literal['LabelSettings']) -> type[ExtendsHint[LabelSettings]]: ...
@overload
def Extends(cls: Literal['Light2D']) -> type[ExtendsHint[Light2D]]: ...
@overload
def Extends(cls: Literal['Light3D']) -> type[ExtendsHint[Light3D]]: ...
@overload
def Extends(cls: Literal['LightOccluder2D']) -> type[ExtendsHint[LightOccluder2D]]: ...
@overload
def Extends(cls: Literal['LightmapGI']) -> type[ExtendsHint[LightmapGI]]: ...
@overload
def Extends(cls: Literal['LightmapGIData']) -> type[ExtendsHint[LightmapGIData]]: ...
@overload
def Extends(cls: Literal['LightmapProbe']) -> type[ExtendsHint[LightmapProbe]]: ...
@overload
def Extends(cls: Literal['Lightmapper']) -> type[ExtendsHint[Lightmapper]]: ...
@overload
def Extends(cls: Literal['LightmapperRD']) -> type[ExtendsHint[LightmapperRD]]: ...
@overload
def Extends(cls: Literal['Line2D']) -> type[ExtendsHint[Line2D]]: ...
@overload
def Extends(cls: Literal['LineEdit']) -> type[ExtendsHint[LineEdit]]: ...
@overload
def Extends(cls: Literal['LinkButton']) -> type[ExtendsHint[LinkButton]]: ...
@overload
def Extends(cls: Literal['LookAtModifier3D']) -> type[ExtendsHint[LookAtModifier3D]]: ...
@overload
def Extends(cls: Literal['MainLoop']) -> type[ExtendsHint[MainLoop]]: ...
@overload
def Extends(cls: Literal['MarginContainer']) -> type[ExtendsHint[MarginContainer]]: ...
@overload
def Extends(cls: Literal['Marker2D']) -> type[ExtendsHint[Marker2D]]: ...
@overload
def Extends(cls: Literal['Marker3D']) -> type[ExtendsHint[Marker3D]]: ...
@overload
def Extends(cls: Literal['Marshalls']) -> type[ExtendsHint[Marshalls]]: ...
@overload
def Extends(cls: Literal['Material']) -> type[ExtendsHint[Material]]: ...
@overload
def Extends(cls: Literal['MenuBar']) -> type[ExtendsHint[MenuBar]]: ...
@overload
def Extends(cls: Literal['MenuButton']) -> type[ExtendsHint[MenuButton]]: ...
@overload
def Extends(cls: Literal['Mesh']) -> type[ExtendsHint[Mesh]]: ...
@overload
def Extends(cls: Literal['MeshConvexDecompositionSettings']) -> type[ExtendsHint[MeshConvexDecompositionSettings]]: ...
@overload
def Extends(cls: Literal['MeshDataTool']) -> type[ExtendsHint[MeshDataTool]]: ...
@overload
def Extends(cls: Literal['MeshInstance2D']) -> type[ExtendsHint[MeshInstance2D]]: ...
@overload
def Extends(cls: Literal['MeshInstance3D']) -> type[ExtendsHint[MeshInstance3D]]: ...
@overload
def Extends(cls: Literal['MeshLibrary']) -> type[ExtendsHint[MeshLibrary]]: ...
@overload
def Extends(cls: Literal['MeshTexture']) -> type[ExtendsHint[MeshTexture]]: ...
@overload
def Extends(cls: Literal['MethodTweener']) -> type[ExtendsHint[MethodTweener]]: ...
@overload
def Extends(cls: Literal['MissingNode']) -> type[ExtendsHint[MissingNode]]: ...
@overload
def Extends(cls: Literal['MissingResource']) -> type[ExtendsHint[MissingResource]]: ...
@overload
def Extends(cls: Literal['MobileVRInterface']) -> type[ExtendsHint[MobileVRInterface]]: ...
@overload
def Extends(cls: Literal['MovieWriter']) -> type[ExtendsHint[MovieWriter]]: ...
@overload
def Extends(cls: Literal['MultiMesh']) -> type[ExtendsHint[MultiMesh]]: ...
@overload
def Extends(cls: Literal['MultiMeshInstance2D']) -> type[ExtendsHint[MultiMeshInstance2D]]: ...
@overload
def Extends(cls: Literal['MultiMeshInstance3D']) -> type[ExtendsHint[MultiMeshInstance3D]]: ...
@overload
def Extends(cls: Literal['MultiplayerAPI']) -> type[ExtendsHint[MultiplayerAPI]]: ...
@overload
def Extends(cls: Literal['MultiplayerAPIExtension']) -> type[ExtendsHint[MultiplayerAPIExtension]]: ...
@overload
def Extends(cls: Literal['MultiplayerPeer']) -> type[ExtendsHint[MultiplayerPeer]]: ...
@overload
def Extends(cls: Literal['MultiplayerPeerExtension']) -> type[ExtendsHint[MultiplayerPeerExtension]]: ...
@overload
def Extends(cls: Literal['MultiplayerSpawner']) -> type[ExtendsHint[MultiplayerSpawner]]: ...
@overload
def Extends(cls: Literal['MultiplayerSynchronizer']) -> type[ExtendsHint[MultiplayerSynchronizer]]: ...
@overload
def Extends(cls: Literal['Mutex']) -> type[ExtendsHint[Mutex]]: ...
@overload
def Extends(cls: Literal['NativeMenu']) -> type[ExtendsHint[NativeMenu]]: ...
@overload
def Extends(cls: Literal['NavigationAgent2D']) -> type[ExtendsHint[NavigationAgent2D]]: ...
@overload
def Extends(cls: Literal['NavigationAgent3D']) -> type[ExtendsHint[NavigationAgent3D]]: ...
@overload
def Extends(cls: Literal['NavigationLink2D']) -> type[ExtendsHint[NavigationLink2D]]: ...
@overload
def Extends(cls: Literal['NavigationLink3D']) -> type[ExtendsHint[NavigationLink3D]]: ...
@overload
def Extends(cls: Literal['NavigationMesh']) -> type[ExtendsHint[NavigationMesh]]: ...
@overload
def Extends(cls: Literal['NavigationMeshGenerator']) -> type[ExtendsHint[NavigationMeshGenerator]]: ...
@overload
def Extends(cls: Literal['NavigationMeshSourceGeometryData2D']) -> type[ExtendsHint[NavigationMeshSourceGeometryData2D]]: ...
@overload
def Extends(cls: Literal['NavigationMeshSourceGeometryData3D']) -> type[ExtendsHint[NavigationMeshSourceGeometryData3D]]: ...
@overload
def Extends(cls: Literal['NavigationObstacle2D']) -> type[ExtendsHint[NavigationObstacle2D]]: ...
@overload
def Extends(cls: Literal['NavigationObstacle3D']) -> type[ExtendsHint[NavigationObstacle3D]]: ...
@overload
def Extends(cls: Literal['NavigationPathQueryParameters2D']) -> type[ExtendsHint[NavigationPathQueryParameters2D]]: ...
@overload
def Extends(cls: Literal['NavigationPathQueryParameters3D']) -> type[ExtendsHint[NavigationPathQueryParameters3D]]: ...
@overload
def Extends(cls: Literal['NavigationPathQueryResult2D']) -> type[ExtendsHint[NavigationPathQueryResult2D]]: ...
@overload
def Extends(cls: Literal['NavigationPathQueryResult3D']) -> type[ExtendsHint[NavigationPathQueryResult3D]]: ...
@overload
def Extends(cls: Literal['NavigationPolygon']) -> type[ExtendsHint[NavigationPolygon]]: ...
@overload
def Extends(cls: Literal['NavigationRegion2D']) -> type[ExtendsHint[NavigationRegion2D]]: ...
@overload
def Extends(cls: Literal['NavigationRegion3D']) -> type[ExtendsHint[NavigationRegion3D]]: ...
@overload
def Extends(cls: Literal['NavigationServer2D']) -> type[ExtendsHint[NavigationServer2D]]: ...
@overload
def Extends(cls: Literal['NavigationServer3D']) -> type[ExtendsHint[NavigationServer3D]]: ...
@overload
def Extends(cls: Literal['NinePatchRect']) -> type[ExtendsHint[NinePatchRect]]: ...
@overload
def Extends(cls: Literal['Node']) -> type[ExtendsHint[Node]]: ...
@overload
def Extends(cls: Literal['Node2D']) -> type[ExtendsHint[Node2D]]: ...
@overload
def Extends(cls: Literal['Node3D']) -> type[ExtendsHint[Node3D]]: ...
@overload
def Extends(cls: Literal['Node3DGizmo']) -> type[ExtendsHint[Node3DGizmo]]: ...
@overload
def Extends(cls: Literal['Noise']) -> type[ExtendsHint[Noise]]: ...
@overload
def Extends(cls: Literal['NoiseTexture2D']) -> type[ExtendsHint[NoiseTexture2D]]: ...
@overload
def Extends(cls: Literal['NoiseTexture3D']) -> type[ExtendsHint[NoiseTexture3D]]: ...
@overload
def Extends(cls: Literal['ORMMaterial3D']) -> type[ExtendsHint[ORMMaterial3D]]: ...
@overload
def Extends(cls: Literal['OS']) -> type[ExtendsHint[OS]]: ...
@overload
def Extends(cls: Literal['Object']) -> type[ExtendsHint[Object]]: ...
@overload
def Extends(cls: Literal['Occluder3D']) -> type[ExtendsHint[Occluder3D]]: ...
@overload
def Extends(cls: Literal['OccluderInstance3D']) -> type[ExtendsHint[OccluderInstance3D]]: ...
@overload
def Extends(cls: Literal['OccluderPolygon2D']) -> type[ExtendsHint[OccluderPolygon2D]]: ...
@overload
def Extends(cls: Literal['OfflineMultiplayerPeer']) -> type[ExtendsHint[OfflineMultiplayerPeer]]: ...
@overload
def Extends(cls: Literal['OggPacketSequence']) -> type[ExtendsHint[OggPacketSequence]]: ...
@overload
def Extends(cls: Literal['OggPacketSequencePlayback']) -> type[ExtendsHint[OggPacketSequencePlayback]]: ...
@overload
def Extends(cls: Literal['OmniLight3D']) -> type[ExtendsHint[OmniLight3D]]: ...
@overload
def Extends(cls: Literal['OpenXRAPIExtension']) -> type[ExtendsHint[OpenXRAPIExtension]]: ...
@overload
def Extends(cls: Literal['OpenXRAction']) -> type[ExtendsHint[OpenXRAction]]: ...
@overload
def Extends(cls: Literal['OpenXRActionBindingModifier']) -> type[ExtendsHint[OpenXRActionBindingModifier]]: ...
@overload
def Extends(cls: Literal['OpenXRActionMap']) -> type[ExtendsHint[OpenXRActionMap]]: ...
@overload
def Extends(cls: Literal['OpenXRActionSet']) -> type[ExtendsHint[OpenXRActionSet]]: ...
@overload
def Extends(cls: Literal['OpenXRAnalogThresholdModifier']) -> type[ExtendsHint[OpenXRAnalogThresholdModifier]]: ...
@overload
def Extends(cls: Literal['OpenXRBindingModifier']) -> type[ExtendsHint[OpenXRBindingModifier]]: ...
@overload
def Extends(cls: Literal['OpenXRBindingModifierEditor']) -> type[ExtendsHint[OpenXRBindingModifierEditor]]: ...
@overload
def Extends(cls: Literal['OpenXRCompositionLayer']) -> type[ExtendsHint[OpenXRCompositionLayer]]: ...
@overload
def Extends(cls: Literal['OpenXRCompositionLayerCylinder']) -> type[ExtendsHint[OpenXRCompositionLayerCylinder]]: ...
@overload
def Extends(cls: Literal['OpenXRCompositionLayerEquirect']) -> type[ExtendsHint[OpenXRCompositionLayerEquirect]]: ...
@overload
def Extends(cls: Literal['OpenXRCompositionLayerQuad']) -> type[ExtendsHint[OpenXRCompositionLayerQuad]]: ...
@overload
def Extends(cls: Literal['OpenXRDpadBindingModifier']) -> type[ExtendsHint[OpenXRDpadBindingModifier]]: ...
@overload
def Extends(cls: Literal['OpenXRExtensionWrapperExtension']) -> type[ExtendsHint[OpenXRExtensionWrapperExtension]]: ...
@overload
def Extends(cls: Literal['OpenXRHand']) -> type[ExtendsHint[OpenXRHand]]: ...
@overload
def Extends(cls: Literal['OpenXRHapticBase']) -> type[ExtendsHint[OpenXRHapticBase]]: ...
@overload
def Extends(cls: Literal['OpenXRHapticVibration']) -> type[ExtendsHint[OpenXRHapticVibration]]: ...
@overload
def Extends(cls: Literal['OpenXRIPBinding']) -> type[ExtendsHint[OpenXRIPBinding]]: ...
@overload
def Extends(cls: Literal['OpenXRIPBindingModifier']) -> type[ExtendsHint[OpenXRIPBindingModifier]]: ...
@overload
def Extends(cls: Literal['OpenXRInteractionProfile']) -> type[ExtendsHint[OpenXRInteractionProfile]]: ...
@overload
def Extends(cls: Literal['OpenXRInteractionProfileEditor']) -> type[ExtendsHint[OpenXRInteractionProfileEditor]]: ...
@overload
def Extends(cls: Literal['OpenXRInteractionProfileEditorBase']) -> type[ExtendsHint[OpenXRInteractionProfileEditorBase]]: ...
@overload
def Extends(cls: Literal['OpenXRInteractionProfileMetadata']) -> type[ExtendsHint[OpenXRInteractionProfileMetadata]]: ...
@overload
def Extends(cls: Literal['OpenXRInterface']) -> type[ExtendsHint[OpenXRInterface]]: ...
@overload
def Extends(cls: Literal['OpenXRVisibilityMask']) -> type[ExtendsHint[OpenXRVisibilityMask]]: ...
@overload
def Extends(cls: Literal['OptimizedTranslation']) -> type[ExtendsHint[OptimizedTranslation]]: ...
@overload
def Extends(cls: Literal['OptionButton']) -> type[ExtendsHint[OptionButton]]: ...
@overload
def Extends(cls: Literal['PCKPacker']) -> type[ExtendsHint[PCKPacker]]: ...
@overload
def Extends(cls: Literal['PackedDataContainer']) -> type[ExtendsHint[PackedDataContainer]]: ...
@overload
def Extends(cls: Literal['PackedDataContainerRef']) -> type[ExtendsHint[PackedDataContainerRef]]: ...
@overload
def Extends(cls: Literal['PackedScene']) -> type[ExtendsHint[PackedScene]]: ...
@overload
def Extends(cls: Literal['PacketPeer']) -> type[ExtendsHint[PacketPeer]]: ...
@overload
def Extends(cls: Literal['PacketPeerDTLS']) -> type[ExtendsHint[PacketPeerDTLS]]: ...
@overload
def Extends(cls: Literal['PacketPeerExtension']) -> type[ExtendsHint[PacketPeerExtension]]: ...
@overload
def Extends(cls: Literal['PacketPeerStream']) -> type[ExtendsHint[PacketPeerStream]]: ...
@overload
def Extends(cls: Literal['PacketPeerUDP']) -> type[ExtendsHint[PacketPeerUDP]]: ...
@overload
def Extends(cls: Literal['Panel']) -> type[ExtendsHint[Panel]]: ...
@overload
def Extends(cls: Literal['PanelContainer']) -> type[ExtendsHint[PanelContainer]]: ...
@overload
def Extends(cls: Literal['PanoramaSkyMaterial']) -> type[ExtendsHint[PanoramaSkyMaterial]]: ...
@overload
def Extends(cls: Literal['Parallax2D']) -> type[ExtendsHint[Parallax2D]]: ...
@overload
def Extends(cls: Literal['ParallaxBackground']) -> type[ExtendsHint[ParallaxBackground]]: ...
@overload
def Extends(cls: Literal['ParallaxLayer']) -> type[ExtendsHint[ParallaxLayer]]: ...
@overload
def Extends(cls: Literal['ParticleProcessMaterial']) -> type[ExtendsHint[ParticleProcessMaterial]]: ...
@overload
def Extends(cls: Literal['Path2D']) -> type[ExtendsHint[Path2D]]: ...
@overload
def Extends(cls: Literal['Path3D']) -> type[ExtendsHint[Path3D]]: ...
@overload
def Extends(cls: Literal['PathFollow2D']) -> type[ExtendsHint[PathFollow2D]]: ...
@overload
def Extends(cls: Literal['PathFollow3D']) -> type[ExtendsHint[PathFollow3D]]: ...
@overload
def Extends(cls: Literal['Performance']) -> type[ExtendsHint[Performance]]: ...
@overload
def Extends(cls: Literal['PhysicalBone2D']) -> type[ExtendsHint[PhysicalBone2D]]: ...
@overload
def Extends(cls: Literal['PhysicalBone3D']) -> type[ExtendsHint[PhysicalBone3D]]: ...
@overload
def Extends(cls: Literal['PhysicalBoneSimulator3D']) -> type[ExtendsHint[PhysicalBoneSimulator3D]]: ...
@overload
def Extends(cls: Literal['PhysicalSkyMaterial']) -> type[ExtendsHint[PhysicalSkyMaterial]]: ...
@overload
def Extends(cls: Literal['PhysicsBody2D']) -> type[ExtendsHint[PhysicsBody2D]]: ...
@overload
def Extends(cls: Literal['PhysicsBody3D']) -> type[ExtendsHint[PhysicsBody3D]]: ...
@overload
def Extends(cls: Literal['PhysicsDirectBodyState2D']) -> type[ExtendsHint[PhysicsDirectBodyState2D]]: ...
@overload
def Extends(cls: Literal['PhysicsDirectBodyState2DExtension']) -> type[ExtendsHint[PhysicsDirectBodyState2DExtension]]: ...
@overload
def Extends(cls: Literal['PhysicsDirectBodyState3D']) -> type[ExtendsHint[PhysicsDirectBodyState3D]]: ...
@overload
def Extends(cls: Literal['PhysicsDirectBodyState3DExtension']) -> type[ExtendsHint[PhysicsDirectBodyState3DExtension]]: ...
@overload
def Extends(cls: Literal['PhysicsDirectSpaceState2D']) -> type[ExtendsHint[PhysicsDirectSpaceState2D]]: ...
@overload
def Extends(cls: Literal['PhysicsDirectSpaceState2DExtension']) -> type[ExtendsHint[PhysicsDirectSpaceState2DExtension]]: ...
@overload
def Extends(cls: Literal['PhysicsDirectSpaceState3D']) -> type[ExtendsHint[PhysicsDirectSpaceState3D]]: ...
@overload
def Extends(cls: Literal['PhysicsDirectSpaceState3DExtension']) -> type[ExtendsHint[PhysicsDirectSpaceState3DExtension]]: ...
@overload
def Extends(cls: Literal['PhysicsMaterial']) -> type[ExtendsHint[PhysicsMaterial]]: ...
@overload
def Extends(cls: Literal['PhysicsPointQueryParameters2D']) -> type[ExtendsHint[PhysicsPointQueryParameters2D]]: ...
@overload
def Extends(cls: Literal['PhysicsPointQueryParameters3D']) -> type[ExtendsHint[PhysicsPointQueryParameters3D]]: ...
@overload
def Extends(cls: Literal['PhysicsRayQueryParameters2D']) -> type[ExtendsHint[PhysicsRayQueryParameters2D]]: ...
@overload
def Extends(cls: Literal['PhysicsRayQueryParameters3D']) -> type[ExtendsHint[PhysicsRayQueryParameters3D]]: ...
@overload
def Extends(cls: Literal['PhysicsServer2D']) -> type[ExtendsHint[PhysicsServer2D]]: ...
@overload
def Extends(cls: Literal['PhysicsServer2DExtension']) -> type[ExtendsHint[PhysicsServer2DExtension]]: ...
@overload
def Extends(cls: Literal['PhysicsServer2DManager']) -> type[ExtendsHint[PhysicsServer2DManager]]: ...
@overload
def Extends(cls: Literal['PhysicsServer3D']) -> type[ExtendsHint[PhysicsServer3D]]: ...
@overload
def Extends(cls: Literal['PhysicsServer3DExtension']) -> type[ExtendsHint[PhysicsServer3DExtension]]: ...
@overload
def Extends(cls: Literal['PhysicsServer3DManager']) -> type[ExtendsHint[PhysicsServer3DManager]]: ...
@overload
def Extends(cls: Literal['PhysicsServer3DRenderingServerHandler']) -> type[ExtendsHint[PhysicsServer3DRenderingServerHandler]]: ...
@overload
def Extends(cls: Literal['PhysicsShapeQueryParameters2D']) -> type[ExtendsHint[PhysicsShapeQueryParameters2D]]: ...
@overload
def Extends(cls: Literal['PhysicsShapeQueryParameters3D']) -> type[ExtendsHint[PhysicsShapeQueryParameters3D]]: ...
@overload
def Extends(cls: Literal['PhysicsTestMotionParameters2D']) -> type[ExtendsHint[PhysicsTestMotionParameters2D]]: ...
@overload
def Extends(cls: Literal['PhysicsTestMotionParameters3D']) -> type[ExtendsHint[PhysicsTestMotionParameters3D]]: ...
@overload
def Extends(cls: Literal['PhysicsTestMotionResult2D']) -> type[ExtendsHint[PhysicsTestMotionResult2D]]: ...
@overload
def Extends(cls: Literal['PhysicsTestMotionResult3D']) -> type[ExtendsHint[PhysicsTestMotionResult3D]]: ...
@overload
def Extends(cls: Literal['PinJoint2D']) -> type[ExtendsHint[PinJoint2D]]: ...
@overload
def Extends(cls: Literal['PinJoint3D']) -> type[ExtendsHint[PinJoint3D]]: ...
@overload
def Extends(cls: Literal['PlaceholderCubemap']) -> type[ExtendsHint[PlaceholderCubemap]]: ...
@overload
def Extends(cls: Literal['PlaceholderCubemapArray']) -> type[ExtendsHint[PlaceholderCubemapArray]]: ...
@overload
def Extends(cls: Literal['PlaceholderMaterial']) -> type[ExtendsHint[PlaceholderMaterial]]: ...
@overload
def Extends(cls: Literal['PlaceholderMesh']) -> type[ExtendsHint[PlaceholderMesh]]: ...
@overload
def Extends(cls: Literal['PlaceholderTexture2D']) -> type[ExtendsHint[PlaceholderTexture2D]]: ...
@overload
def Extends(cls: Literal['PlaceholderTexture2DArray']) -> type[ExtendsHint[PlaceholderTexture2DArray]]: ...
@overload
def Extends(cls: Literal['PlaceholderTexture3D']) -> type[ExtendsHint[PlaceholderTexture3D]]: ...
@overload
def Extends(cls: Literal['PlaceholderTextureLayered']) -> type[ExtendsHint[PlaceholderTextureLayered]]: ...
@overload
def Extends(cls: Literal['PlaneMesh']) -> type[ExtendsHint[PlaneMesh]]: ...
@overload
def Extends(cls: Literal['PointLight2D']) -> type[ExtendsHint[PointLight2D]]: ...
@overload
def Extends(cls: Literal['PointMesh']) -> type[ExtendsHint[PointMesh]]: ...
@overload
def Extends(cls: Literal['Polygon2D']) -> type[ExtendsHint[Polygon2D]]: ...
@overload
def Extends(cls: Literal['PolygonOccluder3D']) -> type[ExtendsHint[PolygonOccluder3D]]: ...
@overload
def Extends(cls: Literal['PolygonPathFinder']) -> type[ExtendsHint[PolygonPathFinder]]: ...
@overload
def Extends(cls: Literal['Popup']) -> type[ExtendsHint[Popup]]: ...
@overload
def Extends(cls: Literal['PopupMenu']) -> type[ExtendsHint[PopupMenu]]: ...
@overload
def Extends(cls: Literal['PopupPanel']) -> type[ExtendsHint[PopupPanel]]: ...
@overload
def Extends(cls: Literal['PortableCompressedTexture2D']) -> type[ExtendsHint[PortableCompressedTexture2D]]: ...
@overload
def Extends(cls: Literal['PrimitiveMesh']) -> type[ExtendsHint[PrimitiveMesh]]: ...
@overload
def Extends(cls: Literal['PrismMesh']) -> type[ExtendsHint[PrismMesh]]: ...
@overload
def Extends(cls: Literal['ProceduralSkyMaterial']) -> type[ExtendsHint[ProceduralSkyMaterial]]: ...
@overload
def Extends(cls: Literal['ProgressBar']) -> type[ExtendsHint[ProgressBar]]: ...
@overload
def Extends(cls: Literal['ProjectSettings']) -> type[ExtendsHint[ProjectSettings]]: ...
@overload
def Extends(cls: Literal['PropertyTweener']) -> type[ExtendsHint[PropertyTweener]]: ...
@overload
def Extends(cls: Literal['QuadMesh']) -> type[ExtendsHint[QuadMesh]]: ...
@overload
def Extends(cls: Literal['QuadOccluder3D']) -> type[ExtendsHint[QuadOccluder3D]]: ...
@overload
def Extends(cls: Literal['RDAttachmentFormat']) -> type[ExtendsHint[RDAttachmentFormat]]: ...
@overload
def Extends(cls: Literal['RDFramebufferPass']) -> type[ExtendsHint[RDFramebufferPass]]: ...
@overload
def Extends(cls: Literal['RDPipelineColorBlendState']) -> type[ExtendsHint[RDPipelineColorBlendState]]: ...
@overload
def Extends(cls: Literal['RDPipelineColorBlendStateAttachment']) -> type[ExtendsHint[RDPipelineColorBlendStateAttachment]]: ...
@overload
def Extends(cls: Literal['RDPipelineDepthStencilState']) -> type[ExtendsHint[RDPipelineDepthStencilState]]: ...
@overload
def Extends(cls: Literal['RDPipelineMultisampleState']) -> type[ExtendsHint[RDPipelineMultisampleState]]: ...
@overload
def Extends(cls: Literal['RDPipelineRasterizationState']) -> type[ExtendsHint[RDPipelineRasterizationState]]: ...
@overload
def Extends(cls: Literal['RDPipelineSpecializationConstant']) -> type[ExtendsHint[RDPipelineSpecializationConstant]]: ...
@overload
def Extends(cls: Literal['RDSamplerState']) -> type[ExtendsHint[RDSamplerState]]: ...
@overload
def Extends(cls: Literal['RDShaderFile']) -> type[ExtendsHint[RDShaderFile]]: ...
@overload
def Extends(cls: Literal['RDShaderSPIRV']) -> type[ExtendsHint[RDShaderSPIRV]]: ...
@overload
def Extends(cls: Literal['RDShaderSource']) -> type[ExtendsHint[RDShaderSource]]: ...
@overload
def Extends(cls: Literal['RDTextureFormat']) -> type[ExtendsHint[RDTextureFormat]]: ...
@overload
def Extends(cls: Literal['RDTextureView']) -> type[ExtendsHint[RDTextureView]]: ...
@overload
def Extends(cls: Literal['RDUniform']) -> type[ExtendsHint[RDUniform]]: ...
@overload
def Extends(cls: Literal['RDVertexAttribute']) -> type[ExtendsHint[RDVertexAttribute]]: ...
@overload
def Extends(cls: Literal['RandomNumberGenerator']) -> type[ExtendsHint[RandomNumberGenerator]]: ...
@overload
def Extends(cls: Literal['Range']) -> type[ExtendsHint[Range]]: ...
@overload
def Extends(cls: Literal['RayCast2D']) -> type[ExtendsHint[RayCast2D]]: ...
@overload
def Extends(cls: Literal['RayCast3D']) -> type[ExtendsHint[RayCast3D]]: ...
@overload
def Extends(cls: Literal['RectangleShape2D']) -> type[ExtendsHint[RectangleShape2D]]: ...
@overload
def Extends(cls: Literal['RefCounted']) -> type[ExtendsHint[RefCounted]]: ...
@overload
def Extends(cls: Literal['ReferenceRect']) -> type[ExtendsHint[ReferenceRect]]: ...
@overload
def Extends(cls: Literal['ReflectionProbe']) -> type[ExtendsHint[ReflectionProbe]]: ...
@overload
def Extends(cls: Literal['RegEx']) -> type[ExtendsHint[RegEx]]: ...
@overload
def Extends(cls: Literal['RegExMatch']) -> type[ExtendsHint[RegExMatch]]: ...
@overload
def Extends(cls: Literal['RemoteTransform2D']) -> type[ExtendsHint[RemoteTransform2D]]: ...
@overload
def Extends(cls: Literal['RemoteTransform3D']) -> type[ExtendsHint[RemoteTransform3D]]: ...
@overload
def Extends(cls: Literal['RenderData']) -> type[ExtendsHint[RenderData]]: ...
@overload
def Extends(cls: Literal['RenderDataExtension']) -> type[ExtendsHint[RenderDataExtension]]: ...
@overload
def Extends(cls: Literal['RenderDataRD']) -> type[ExtendsHint[RenderDataRD]]: ...
@overload
def Extends(cls: Literal['RenderSceneBuffers']) -> type[ExtendsHint[RenderSceneBuffers]]: ...
@overload
def Extends(cls: Literal['RenderSceneBuffersConfiguration']) -> type[ExtendsHint[RenderSceneBuffersConfiguration]]: ...
@overload
def Extends(cls: Literal['RenderSceneBuffersExtension']) -> type[ExtendsHint[RenderSceneBuffersExtension]]: ...
@overload
def Extends(cls: Literal['RenderSceneBuffersRD']) -> type[ExtendsHint[RenderSceneBuffersRD]]: ...
@overload
def Extends(cls: Literal['RenderSceneData']) -> type[ExtendsHint[RenderSceneData]]: ...
@overload
def Extends(cls: Literal['RenderSceneDataExtension']) -> type[ExtendsHint[RenderSceneDataExtension]]: ...
@overload
def Extends(cls: Literal['RenderSceneDataRD']) -> type[ExtendsHint[RenderSceneDataRD]]: ...
@overload
def Extends(cls: Literal['RenderingDevice']) -> type[ExtendsHint[RenderingDevice]]: ...
@overload
def Extends(cls: Literal['RenderingServer']) -> type[ExtendsHint[RenderingServer]]: ...
@overload
def Extends(cls: Literal['Resource']) -> type[ExtendsHint[Resource]]: ...
@overload
def Extends(cls: Literal['ResourceFormatLoader']) -> type[ExtendsHint[ResourceFormatLoader]]: ...
@overload
def Extends(cls: Literal['ResourceFormatSaver']) -> type[ExtendsHint[ResourceFormatSaver]]: ...
@overload
def Extends(cls: Literal['ResourceImporter']) -> type[ExtendsHint[ResourceImporter]]: ...
@overload
def Extends(cls: Literal['ResourceImporterBMFont']) -> type[ExtendsHint[ResourceImporterBMFont]]: ...
@overload
def Extends(cls: Literal['ResourceImporterBitMap']) -> type[ExtendsHint[ResourceImporterBitMap]]: ...
@overload
def Extends(cls: Literal['ResourceImporterCSVTranslation']) -> type[ExtendsHint[ResourceImporterCSVTranslation]]: ...
@overload
def Extends(cls: Literal['ResourceImporterDynamicFont']) -> type[ExtendsHint[ResourceImporterDynamicFont]]: ...
@overload
def Extends(cls: Literal['ResourceImporterImage']) -> type[ExtendsHint[ResourceImporterImage]]: ...
@overload
def Extends(cls: Literal['ResourceImporterImageFont']) -> type[ExtendsHint[ResourceImporterImageFont]]: ...
@overload
def Extends(cls: Literal['ResourceImporterLayeredTexture']) -> type[ExtendsHint[ResourceImporterLayeredTexture]]: ...
@overload
def Extends(cls: Literal['ResourceImporterMP3']) -> type[ExtendsHint[ResourceImporterMP3]]: ...
@overload
def Extends(cls: Literal['ResourceImporterOBJ']) -> type[ExtendsHint[ResourceImporterOBJ]]: ...
@overload
def Extends(cls: Literal['ResourceImporterOggVorbis']) -> type[ExtendsHint[ResourceImporterOggVorbis]]: ...
@overload
def Extends(cls: Literal['ResourceImporterScene']) -> type[ExtendsHint[ResourceImporterScene]]: ...
@overload
def Extends(cls: Literal['ResourceImporterShaderFile']) -> type[ExtendsHint[ResourceImporterShaderFile]]: ...
@overload
def Extends(cls: Literal['ResourceImporterTexture']) -> type[ExtendsHint[ResourceImporterTexture]]: ...
@overload
def Extends(cls: Literal['ResourceImporterTextureAtlas']) -> type[ExtendsHint[ResourceImporterTextureAtlas]]: ...
@overload
def Extends(cls: Literal['ResourceImporterWAV']) -> type[ExtendsHint[ResourceImporterWAV]]: ...
@overload
def Extends(cls: Literal['ResourceLoader']) -> type[ExtendsHint[ResourceLoader]]: ...
@overload
def Extends(cls: Literal['ResourcePreloader']) -> type[ExtendsHint[ResourcePreloader]]: ...
@overload
def Extends(cls: Literal['ResourceSaver']) -> type[ExtendsHint[ResourceSaver]]: ...
@overload
def Extends(cls: Literal['ResourceUID']) -> type[ExtendsHint[ResourceUID]]: ...
@overload
def Extends(cls: Literal['RetargetModifier3D']) -> type[ExtendsHint[RetargetModifier3D]]: ...
@overload
def Extends(cls: Literal['RibbonTrailMesh']) -> type[ExtendsHint[RibbonTrailMesh]]: ...
@overload
def Extends(cls: Literal['RichTextEffect']) -> type[ExtendsHint[RichTextEffect]]: ...
@overload
def Extends(cls: Literal['RichTextLabel']) -> type[ExtendsHint[RichTextLabel]]: ...
@overload
def Extends(cls: Literal['RigidBody2D']) -> type[ExtendsHint[RigidBody2D]]: ...
@overload
def Extends(cls: Literal['RigidBody3D']) -> type[ExtendsHint[RigidBody3D]]: ...
@overload
def Extends(cls: Literal['RootMotionView']) -> type[ExtendsHint[RootMotionView]]: ...
@overload
def Extends(cls: Literal['SceneMultiplayer']) -> type[ExtendsHint[SceneMultiplayer]]: ...
@overload
def Extends(cls: Literal['SceneReplicationConfig']) -> type[ExtendsHint[SceneReplicationConfig]]: ...
@overload
def Extends(cls: Literal['SceneState']) -> type[ExtendsHint[SceneState]]: ...
@overload
def Extends(cls: Literal['SceneTree']) -> type[ExtendsHint[SceneTree]]: ...
@overload
def Extends(cls: Literal['SceneTreeTimer']) -> type[ExtendsHint[SceneTreeTimer]]: ...
@overload
def Extends(cls: Literal['Script']) -> type[ExtendsHint[Script]]: ...
@overload
def Extends(cls: Literal['ScriptCreateDialog']) -> type[ExtendsHint[ScriptCreateDialog]]: ...
@overload
def Extends(cls: Literal['ScriptEditor']) -> type[ExtendsHint[ScriptEditor]]: ...
@overload
def Extends(cls: Literal['ScriptEditorBase']) -> type[ExtendsHint[ScriptEditorBase]]: ...
@overload
def Extends(cls: Literal['ScriptExtension']) -> type[ExtendsHint[ScriptExtension]]: ...
@overload
def Extends(cls: Literal['ScriptLanguage']) -> type[ExtendsHint[ScriptLanguage]]: ...
@overload
def Extends(cls: Literal['ScriptLanguageExtension']) -> type[ExtendsHint[ScriptLanguageExtension]]: ...
@overload
def Extends(cls: Literal['ScrollBar']) -> type[ExtendsHint[ScrollBar]]: ...
@overload
def Extends(cls: Literal['ScrollContainer']) -> type[ExtendsHint[ScrollContainer]]: ...
@overload
def Extends(cls: Literal['SegmentShape2D']) -> type[ExtendsHint[SegmentShape2D]]: ...
@overload
def Extends(cls: Literal['Semaphore']) -> type[ExtendsHint[Semaphore]]: ...
@overload
def Extends(cls: Literal['SeparationRayShape2D']) -> type[ExtendsHint[SeparationRayShape2D]]: ...
@overload
def Extends(cls: Literal['SeparationRayShape3D']) -> type[ExtendsHint[SeparationRayShape3D]]: ...
@overload
def Extends(cls: Literal['Separator']) -> type[ExtendsHint[Separator]]: ...
@overload
def Extends(cls: Literal['Shader']) -> type[ExtendsHint[Shader]]: ...
@overload
def Extends(cls: Literal['ShaderGlobalsOverride']) -> type[ExtendsHint[ShaderGlobalsOverride]]: ...
@overload
def Extends(cls: Literal['ShaderInclude']) -> type[ExtendsHint[ShaderInclude]]: ...
@overload
def Extends(cls: Literal['ShaderIncludeDB']) -> type[ExtendsHint[ShaderIncludeDB]]: ...
@overload
def Extends(cls: Literal['ShaderMaterial']) -> type[ExtendsHint[ShaderMaterial]]: ...
@overload
def Extends(cls: Literal['Shape2D']) -> type[ExtendsHint[Shape2D]]: ...
@overload
def Extends(cls: Literal['Shape3D']) -> type[ExtendsHint[Shape3D]]: ...
@overload
def Extends(cls: Literal['ShapeCast2D']) -> type[ExtendsHint[ShapeCast2D]]: ...
@overload
def Extends(cls: Literal['ShapeCast3D']) -> type[ExtendsHint[ShapeCast3D]]: ...
@overload
def Extends(cls: Literal['Shortcut']) -> type[ExtendsHint[Shortcut]]: ...
@overload
def Extends(cls: Literal['Skeleton2D']) -> type[ExtendsHint[Skeleton2D]]: ...
@overload
def Extends(cls: Literal['Skeleton3D']) -> type[ExtendsHint[Skeleton3D]]: ...
@overload
def Extends(cls: Literal['SkeletonIK3D']) -> type[ExtendsHint[SkeletonIK3D]]: ...
@overload
def Extends(cls: Literal['SkeletonModification2D']) -> type[ExtendsHint[SkeletonModification2D]]: ...
@overload
def Extends(cls: Literal['SkeletonModification2DCCDIK']) -> type[ExtendsHint[SkeletonModification2DCCDIK]]: ...
@overload
def Extends(cls: Literal['SkeletonModification2DFABRIK']) -> type[ExtendsHint[SkeletonModification2DFABRIK]]: ...
@overload
def Extends(cls: Literal['SkeletonModification2DJiggle']) -> type[ExtendsHint[SkeletonModification2DJiggle]]: ...
@overload
def Extends(cls: Literal['SkeletonModification2DLookAt']) -> type[ExtendsHint[SkeletonModification2DLookAt]]: ...
@overload
def Extends(cls: Literal['SkeletonModification2DPhysicalBones']) -> type[ExtendsHint[SkeletonModification2DPhysicalBones]]: ...
@overload
def Extends(cls: Literal['SkeletonModification2DStackHolder']) -> type[ExtendsHint[SkeletonModification2DStackHolder]]: ...
@overload
def Extends(cls: Literal['SkeletonModification2DTwoBoneIK']) -> type[ExtendsHint[SkeletonModification2DTwoBoneIK]]: ...
@overload
def Extends(cls: Literal['SkeletonModificationStack2D']) -> type[ExtendsHint[SkeletonModificationStack2D]]: ...
@overload
def Extends(cls: Literal['SkeletonModifier3D']) -> type[ExtendsHint[SkeletonModifier3D]]: ...
@overload
def Extends(cls: Literal['SkeletonProfile']) -> type[ExtendsHint[SkeletonProfile]]: ...
@overload
def Extends(cls: Literal['SkeletonProfileHumanoid']) -> type[ExtendsHint[SkeletonProfileHumanoid]]: ...
@overload
def Extends(cls: Literal['Skin']) -> type[ExtendsHint[Skin]]: ...
@overload
def Extends(cls: Literal['SkinReference']) -> type[ExtendsHint[SkinReference]]: ...
@overload
def Extends(cls: Literal['Sky']) -> type[ExtendsHint[Sky]]: ...
@overload
def Extends(cls: Literal['Slider']) -> type[ExtendsHint[Slider]]: ...
@overload
def Extends(cls: Literal['SliderJoint3D']) -> type[ExtendsHint[SliderJoint3D]]: ...
@overload
def Extends(cls: Literal['SoftBody3D']) -> type[ExtendsHint[SoftBody3D]]: ...
@overload
def Extends(cls: Literal['SphereMesh']) -> type[ExtendsHint[SphereMesh]]: ...
@overload
def Extends(cls: Literal['SphereOccluder3D']) -> type[ExtendsHint[SphereOccluder3D]]: ...
@overload
def Extends(cls: Literal['SphereShape3D']) -> type[ExtendsHint[SphereShape3D]]: ...
@overload
def Extends(cls: Literal['SpinBox']) -> type[ExtendsHint[SpinBox]]: ...
@overload
def Extends(cls: Literal['SplitContainer']) -> type[ExtendsHint[SplitContainer]]: ...
@overload
def Extends(cls: Literal['SpotLight3D']) -> type[ExtendsHint[SpotLight3D]]: ...
@overload
def Extends(cls: Literal['SpringArm3D']) -> type[ExtendsHint[SpringArm3D]]: ...
@overload
def Extends(cls: Literal['SpringBoneCollision3D']) -> type[ExtendsHint[SpringBoneCollision3D]]: ...
@overload
def Extends(cls: Literal['SpringBoneCollisionCapsule3D']) -> type[ExtendsHint[SpringBoneCollisionCapsule3D]]: ...
@overload
def Extends(cls: Literal['SpringBoneCollisionPlane3D']) -> type[ExtendsHint[SpringBoneCollisionPlane3D]]: ...
@overload
def Extends(cls: Literal['SpringBoneCollisionSphere3D']) -> type[ExtendsHint[SpringBoneCollisionSphere3D]]: ...
@overload
def Extends(cls: Literal['SpringBoneSimulator3D']) -> type[ExtendsHint[SpringBoneSimulator3D]]: ...
@overload
def Extends(cls: Literal['Sprite2D']) -> type[ExtendsHint[Sprite2D]]: ...
@overload
def Extends(cls: Literal['Sprite3D']) -> type[ExtendsHint[Sprite3D]]: ...
@overload
def Extends(cls: Literal['SpriteBase3D']) -> type[ExtendsHint[SpriteBase3D]]: ...
@overload
def Extends(cls: Literal['SpriteFrames']) -> type[ExtendsHint[SpriteFrames]]: ...
@overload
def Extends(cls: Literal['StandardMaterial3D']) -> type[ExtendsHint[StandardMaterial3D]]: ...
@overload
def Extends(cls: Literal['StaticBody2D']) -> type[ExtendsHint[StaticBody2D]]: ...
@overload
def Extends(cls: Literal['StaticBody3D']) -> type[ExtendsHint[StaticBody3D]]: ...
@overload
def Extends(cls: Literal['StatusIndicator']) -> type[ExtendsHint[StatusIndicator]]: ...
@overload
def Extends(cls: Literal['StreamPeer']) -> type[ExtendsHint[StreamPeer]]: ...
@overload
def Extends(cls: Literal['StreamPeerBuffer']) -> type[ExtendsHint[StreamPeerBuffer]]: ...
@overload
def Extends(cls: Literal['StreamPeerExtension']) -> type[ExtendsHint[StreamPeerExtension]]: ...
@overload
def Extends(cls: Literal['StreamPeerGZIP']) -> type[ExtendsHint[StreamPeerGZIP]]: ...
@overload
def Extends(cls: Literal['StreamPeerTCP']) -> type[ExtendsHint[StreamPeerTCP]]: ...
@overload
def Extends(cls: Literal['StreamPeerTLS']) -> type[ExtendsHint[StreamPeerTLS]]: ...
@overload
def Extends(cls: Literal['StyleBox']) -> type[ExtendsHint[StyleBox]]: ...
@overload
def Extends(cls: Literal['StyleBoxEmpty']) -> type[ExtendsHint[StyleBoxEmpty]]: ...
@overload
def Extends(cls: Literal['StyleBoxFlat']) -> type[ExtendsHint[StyleBoxFlat]]: ...
@overload
def Extends(cls: Literal['StyleBoxLine']) -> type[ExtendsHint[StyleBoxLine]]: ...
@overload
def Extends(cls: Literal['StyleBoxTexture']) -> type[ExtendsHint[StyleBoxTexture]]: ...
@overload
def Extends(cls: Literal['SubViewport']) -> type[ExtendsHint[SubViewport]]: ...
@overload
def Extends(cls: Literal['SubViewportContainer']) -> type[ExtendsHint[SubViewportContainer]]: ...
@overload
def Extends(cls: Literal['SubtweenTweener']) -> type[ExtendsHint[SubtweenTweener]]: ...
@overload
def Extends(cls: Literal['SurfaceTool']) -> type[ExtendsHint[SurfaceTool]]: ...
@overload
def Extends(cls: Literal['SyntaxHighlighter']) -> type[ExtendsHint[SyntaxHighlighter]]: ...
@overload
def Extends(cls: Literal['SystemFont']) -> type[ExtendsHint[SystemFont]]: ...
@overload
def Extends(cls: Literal['TCPServer']) -> type[ExtendsHint[TCPServer]]: ...
@overload
def Extends(cls: Literal['TLSOptions']) -> type[ExtendsHint[TLSOptions]]: ...
@overload
def Extends(cls: Literal['TabBar']) -> type[ExtendsHint[TabBar]]: ...
@overload
def Extends(cls: Literal['TabContainer']) -> type[ExtendsHint[TabContainer]]: ...
@overload
def Extends(cls: Literal['TextEdit']) -> type[ExtendsHint[TextEdit]]: ...
@overload
def Extends(cls: Literal['TextLine']) -> type[ExtendsHint[TextLine]]: ...
@overload
def Extends(cls: Literal['TextMesh']) -> type[ExtendsHint[TextMesh]]: ...
@overload
def Extends(cls: Literal['TextParagraph']) -> type[ExtendsHint[TextParagraph]]: ...
@overload
def Extends(cls: Literal['TextServer']) -> type[ExtendsHint[TextServer]]: ...
@overload
def Extends(cls: Literal['TextServerAdvanced']) -> type[ExtendsHint[TextServerAdvanced]]: ...
@overload
def Extends(cls: Literal['TextServerDummy']) -> type[ExtendsHint[TextServerDummy]]: ...
@overload
def Extends(cls: Literal['TextServerExtension']) -> type[ExtendsHint[TextServerExtension]]: ...
@overload
def Extends(cls: Literal['TextServerManager']) -> type[ExtendsHint[TextServerManager]]: ...
@overload
def Extends(cls: Literal['Texture']) -> type[ExtendsHint[Texture]]: ...
@overload
def Extends(cls: Literal['Texture2D']) -> type[ExtendsHint[Texture2D]]: ...
@overload
def Extends(cls: Literal['Texture2DArray']) -> type[ExtendsHint[Texture2DArray]]: ...
@overload
def Extends(cls: Literal['Texture2DArrayRD']) -> type[ExtendsHint[Texture2DArrayRD]]: ...
@overload
def Extends(cls: Literal['Texture2DRD']) -> type[ExtendsHint[Texture2DRD]]: ...
@overload
def Extends(cls: Literal['Texture3D']) -> type[ExtendsHint[Texture3D]]: ...
@overload
def Extends(cls: Literal['Texture3DRD']) -> type[ExtendsHint[Texture3DRD]]: ...
@overload
def Extends(cls: Literal['TextureButton']) -> type[ExtendsHint[TextureButton]]: ...
@overload
def Extends(cls: Literal['TextureCubemapArrayRD']) -> type[ExtendsHint[TextureCubemapArrayRD]]: ...
@overload
def Extends(cls: Literal['TextureCubemapRD']) -> type[ExtendsHint[TextureCubemapRD]]: ...
@overload
def Extends(cls: Literal['TextureLayered']) -> type[ExtendsHint[TextureLayered]]: ...
@overload
def Extends(cls: Literal['TextureLayeredRD']) -> type[ExtendsHint[TextureLayeredRD]]: ...
@overload
def Extends(cls: Literal['TextureProgressBar']) -> type[ExtendsHint[TextureProgressBar]]: ...
@overload
def Extends(cls: Literal['TextureRect']) -> type[ExtendsHint[TextureRect]]: ...
@overload
def Extends(cls: Literal['Theme']) -> type[ExtendsHint[Theme]]: ...
@overload
def Extends(cls: Literal['ThemeDB']) -> type[ExtendsHint[ThemeDB]]: ...
@overload
def Extends(cls: Literal['Thread']) -> type[ExtendsHint[Thread]]: ...
@overload
def Extends(cls: Literal['TileData']) -> type[ExtendsHint[TileData]]: ...
@overload
def Extends(cls: Literal['TileMap']) -> type[ExtendsHint[TileMap]]: ...
@overload
def Extends(cls: Literal['TileMapLayer']) -> type[ExtendsHint[TileMapLayer]]: ...
@overload
def Extends(cls: Literal['TileMapPattern']) -> type[ExtendsHint[TileMapPattern]]: ...
@overload
def Extends(cls: Literal['TileSet']) -> type[ExtendsHint[TileSet]]: ...
@overload
def Extends(cls: Literal['TileSetAtlasSource']) -> type[ExtendsHint[TileSetAtlasSource]]: ...
@overload
def Extends(cls: Literal['TileSetScenesCollectionSource']) -> type[ExtendsHint[TileSetScenesCollectionSource]]: ...
@overload
def Extends(cls: Literal['TileSetSource']) -> type[ExtendsHint[TileSetSource]]: ...
@overload
def Extends(cls: Literal['Time']) -> type[ExtendsHint[Time]]: ...
@overload
def Extends(cls: Literal['Timer']) -> type[ExtendsHint[Timer]]: ...
@overload
def Extends(cls: Literal['TorusMesh']) -> type[ExtendsHint[TorusMesh]]: ...
@overload
def Extends(cls: Literal['TouchScreenButton']) -> type[ExtendsHint[TouchScreenButton]]: ...
@overload
def Extends(cls: Literal['Translation']) -> type[ExtendsHint[Translation]]: ...
@overload
def Extends(cls: Literal['TranslationDomain']) -> type[ExtendsHint[TranslationDomain]]: ...
@overload
def Extends(cls: Literal['TranslationServer']) -> type[ExtendsHint[TranslationServer]]: ...
@overload
def Extends(cls: Literal['Tree']) -> type[ExtendsHint[Tree]]: ...
@overload
def Extends(cls: Literal['TreeItem']) -> type[ExtendsHint[TreeItem]]: ...
@overload
def Extends(cls: Literal['TriangleMesh']) -> type[ExtendsHint[TriangleMesh]]: ...
@overload
def Extends(cls: Literal['TubeTrailMesh']) -> type[ExtendsHint[TubeTrailMesh]]: ...
@overload
def Extends(cls: Literal['Tween']) -> type[ExtendsHint[Tween]]: ...
@overload
def Extends(cls: Literal['Tweener']) -> type[ExtendsHint[Tweener]]: ...
@overload
def Extends(cls: Literal['UDPServer']) -> type[ExtendsHint[UDPServer]]: ...
@overload
def Extends(cls: Literal['UPNP']) -> type[ExtendsHint[UPNP]]: ...
@overload
def Extends(cls: Literal['UPNPDevice']) -> type[ExtendsHint[UPNPDevice]]: ...
@overload
def Extends(cls: Literal['UndoRedo']) -> type[ExtendsHint[UndoRedo]]: ...
@overload
def Extends(cls: Literal['UniformSetCacheRD']) -> type[ExtendsHint[UniformSetCacheRD]]: ...
@overload
def Extends(cls: Literal['VBoxContainer']) -> type[ExtendsHint[VBoxContainer]]: ...
@overload
def Extends(cls: Literal['VFlowContainer']) -> type[ExtendsHint[VFlowContainer]]: ...
@overload
def Extends(cls: Literal['VScrollBar']) -> type[ExtendsHint[VScrollBar]]: ...
@overload
def Extends(cls: Literal['VSeparator']) -> type[ExtendsHint[VSeparator]]: ...
@overload
def Extends(cls: Literal['VSlider']) -> type[ExtendsHint[VSlider]]: ...
@overload
def Extends(cls: Literal['VSplitContainer']) -> type[ExtendsHint[VSplitContainer]]: ...
@overload
def Extends(cls: Literal['VehicleBody3D']) -> type[ExtendsHint[VehicleBody3D]]: ...
@overload
def Extends(cls: Literal['VehicleWheel3D']) -> type[ExtendsHint[VehicleWheel3D]]: ...
@overload
def Extends(cls: Literal['VideoStream']) -> type[ExtendsHint[VideoStream]]: ...
@overload
def Extends(cls: Literal['VideoStreamPlayback']) -> type[ExtendsHint[VideoStreamPlayback]]: ...
@overload
def Extends(cls: Literal['VideoStreamPlayer']) -> type[ExtendsHint[VideoStreamPlayer]]: ...
@overload
def Extends(cls: Literal['VideoStreamTheora']) -> type[ExtendsHint[VideoStreamTheora]]: ...
@overload
def Extends(cls: Literal['Viewport']) -> type[ExtendsHint[Viewport]]: ...
@overload
def Extends(cls: Literal['ViewportTexture']) -> type[ExtendsHint[ViewportTexture]]: ...
@overload
def Extends(cls: Literal['VisibleOnScreenEnabler2D']) -> type[ExtendsHint[VisibleOnScreenEnabler2D]]: ...
@overload
def Extends(cls: Literal['VisibleOnScreenEnabler3D']) -> type[ExtendsHint[VisibleOnScreenEnabler3D]]: ...
@overload
def Extends(cls: Literal['VisibleOnScreenNotifier2D']) -> type[ExtendsHint[VisibleOnScreenNotifier2D]]: ...
@overload
def Extends(cls: Literal['VisibleOnScreenNotifier3D']) -> type[ExtendsHint[VisibleOnScreenNotifier3D]]: ...
@overload
def Extends(cls: Literal['VisualInstance3D']) -> type[ExtendsHint[VisualInstance3D]]: ...
@overload
def Extends(cls: Literal['VisualShader']) -> type[ExtendsHint[VisualShader]]: ...
@overload
def Extends(cls: Literal['VisualShaderNode']) -> type[ExtendsHint[VisualShaderNode]]: ...
@overload
def Extends(cls: Literal['VisualShaderNodeBillboard']) -> type[ExtendsHint[VisualShaderNodeBillboard]]: ...
@overload
def Extends(cls: Literal['VisualShaderNodeBooleanConstant']) -> type[ExtendsHint[VisualShaderNodeBooleanConstant]]: ...
@overload
def Extends(cls: Literal['VisualShaderNodeBooleanParameter']) -> type[ExtendsHint[VisualShaderNodeBooleanParameter]]: ...
@overload
def Extends(cls: Literal['VisualShaderNodeClamp']) -> type[ExtendsHint[VisualShaderNodeClamp]]: ...
@overload
def Extends(cls: Literal['VisualShaderNodeColorConstant']) -> type[ExtendsHint[VisualShaderNodeColorConstant]]: ...
@overload
def Extends(cls: Literal['VisualShaderNodeColorFunc']) -> type[ExtendsHint[VisualShaderNodeColorFunc]]: ...
@overload
def Extends(cls: Literal['VisualShaderNodeColorOp']) -> type[ExtendsHint[VisualShaderNodeColorOp]]: ...
@overload
def Extends(cls: Literal['VisualShaderNodeColorParameter']) -> type[ExtendsHint[VisualShaderNodeColorParameter]]: ...
@overload
def Extends(cls: Literal['VisualShaderNodeComment']) -> type[ExtendsHint[VisualShaderNodeComment]]: ...
@overload
def Extends(cls: Literal['VisualShaderNodeCompare']) -> type[ExtendsHint[VisualShaderNodeCompare]]: ...
@overload
def Extends(cls: Literal['VisualShaderNodeConstant']) -> type[ExtendsHint[VisualShaderNodeConstant]]: ...
@overload
def Extends(cls: Literal['VisualShaderNodeCubemap']) -> type[ExtendsHint[VisualShaderNodeCubemap]]: ...
@overload
def Extends(cls: Literal['VisualShaderNodeCubemapParameter']) -> type[ExtendsHint[VisualShaderNodeCubemapParameter]]: ...
@overload
def Extends(cls: Literal['VisualShaderNodeCurveTexture']) -> type[ExtendsHint[VisualShaderNodeCurveTexture]]: ...
@overload
def Extends(cls: Literal['VisualShaderNodeCurveXYZTexture']) -> type[ExtendsHint[VisualShaderNodeCurveXYZTexture]]: ...
@overload
def Extends(cls: Literal['VisualShaderNodeCustom']) -> type[ExtendsHint[VisualShaderNodeCustom]]: ...
@overload
def Extends(cls: Literal['VisualShaderNodeDerivativeFunc']) -> type[ExtendsHint[VisualShaderNodeDerivativeFunc]]: ...
@overload
def Extends(cls: Literal['VisualShaderNodeDeterminant']) -> type[ExtendsHint[VisualShaderNodeDeterminant]]: ...
@overload
def Extends(cls: Literal['VisualShaderNodeDistanceFade']) -> type[ExtendsHint[VisualShaderNodeDistanceFade]]: ...
@overload
def Extends(cls: Literal['VisualShaderNodeDotProduct']) -> type[ExtendsHint[VisualShaderNodeDotProduct]]: ...
@overload
def Extends(cls: Literal['VisualShaderNodeExpression']) -> type[ExtendsHint[VisualShaderNodeExpression]]: ...
@overload
def Extends(cls: Literal['VisualShaderNodeFaceForward']) -> type[ExtendsHint[VisualShaderNodeFaceForward]]: ...
@overload
def Extends(cls: Literal['VisualShaderNodeFloatConstant']) -> type[ExtendsHint[VisualShaderNodeFloatConstant]]: ...
@overload
def Extends(cls: Literal['VisualShaderNodeFloatFunc']) -> type[ExtendsHint[VisualShaderNodeFloatFunc]]: ...
@overload
def Extends(cls: Literal['VisualShaderNodeFloatOp']) -> type[ExtendsHint[VisualShaderNodeFloatOp]]: ...
@overload
def Extends(cls: Literal['VisualShaderNodeFloatParameter']) -> type[ExtendsHint[VisualShaderNodeFloatParameter]]: ...
@overload
def Extends(cls: Literal['VisualShaderNodeFrame']) -> type[ExtendsHint[VisualShaderNodeFrame]]: ...
@overload
def Extends(cls: Literal['VisualShaderNodeFresnel']) -> type[ExtendsHint[VisualShaderNodeFresnel]]: ...
@overload
def Extends(cls: Literal['VisualShaderNodeGlobalExpression']) -> type[ExtendsHint[VisualShaderNodeGlobalExpression]]: ...
@overload
def Extends(cls: Literal['VisualShaderNodeGroupBase']) -> type[ExtendsHint[VisualShaderNodeGroupBase]]: ...
@overload
def Extends(cls: Literal['VisualShaderNodeIf']) -> type[ExtendsHint[VisualShaderNodeIf]]: ...
@overload
def Extends(cls: Literal['VisualShaderNodeInput']) -> type[ExtendsHint[VisualShaderNodeInput]]: ...
@overload
def Extends(cls: Literal['VisualShaderNodeIntConstant']) -> type[ExtendsHint[VisualShaderNodeIntConstant]]: ...
@overload
def Extends(cls: Literal['VisualShaderNodeIntFunc']) -> type[ExtendsHint[VisualShaderNodeIntFunc]]: ...
@overload
def Extends(cls: Literal['VisualShaderNodeIntOp']) -> type[ExtendsHint[VisualShaderNodeIntOp]]: ...
@overload
def Extends(cls: Literal['VisualShaderNodeIntParameter']) -> type[ExtendsHint[VisualShaderNodeIntParameter]]: ...
@overload
def Extends(cls: Literal['VisualShaderNodeIs']) -> type[ExtendsHint[VisualShaderNodeIs]]: ...
@overload
def Extends(cls: Literal['VisualShaderNodeLinearSceneDepth']) -> type[ExtendsHint[VisualShaderNodeLinearSceneDepth]]: ...
@overload
def Extends(cls: Literal['VisualShaderNodeMix']) -> type[ExtendsHint[VisualShaderNodeMix]]: ...
@overload
def Extends(cls: Literal['VisualShaderNodeMultiplyAdd']) -> type[ExtendsHint[VisualShaderNodeMultiplyAdd]]: ...
@overload
def Extends(cls: Literal['VisualShaderNodeOuterProduct']) -> type[ExtendsHint[VisualShaderNodeOuterProduct]]: ...
@overload
def Extends(cls: Literal['VisualShaderNodeOutput']) -> type[ExtendsHint[VisualShaderNodeOutput]]: ...
@overload
def Extends(cls: Literal['VisualShaderNodeParameter']) -> type[ExtendsHint[VisualShaderNodeParameter]]: ...
@overload
def Extends(cls: Literal['VisualShaderNodeParameterRef']) -> type[ExtendsHint[VisualShaderNodeParameterRef]]: ...
@overload
def Extends(cls: Literal['VisualShaderNodeParticleAccelerator']) -> type[ExtendsHint[VisualShaderNodeParticleAccelerator]]: ...
@overload
def Extends(cls: Literal['VisualShaderNodeParticleBoxEmitter']) -> type[ExtendsHint[VisualShaderNodeParticleBoxEmitter]]: ...
@overload
def Extends(cls: Literal['VisualShaderNodeParticleConeVelocity']) -> type[ExtendsHint[VisualShaderNodeParticleConeVelocity]]: ...
@overload
def Extends(cls: Literal['VisualShaderNodeParticleEmit']) -> type[ExtendsHint[VisualShaderNodeParticleEmit]]: ...
@overload
def Extends(cls: Literal['VisualShaderNodeParticleEmitter']) -> type[ExtendsHint[VisualShaderNodeParticleEmitter]]: ...
@overload
def Extends(cls: Literal['VisualShaderNodeParticleMeshEmitter']) -> type[ExtendsHint[VisualShaderNodeParticleMeshEmitter]]: ...
@overload
def Extends(cls: Literal['VisualShaderNodeParticleMultiplyByAxisAngle']) -> type[ExtendsHint[VisualShaderNodeParticleMultiplyByAxisAngle]]: ...
@overload
def Extends(cls: Literal['VisualShaderNodeParticleOutput']) -> type[ExtendsHint[VisualShaderNodeParticleOutput]]: ...
@overload
def Extends(cls: Literal['VisualShaderNodeParticleRandomness']) -> type[ExtendsHint[VisualShaderNodeParticleRandomness]]: ...
@overload
def Extends(cls: Literal['VisualShaderNodeParticleRingEmitter']) -> type[ExtendsHint[VisualShaderNodeParticleRingEmitter]]: ...
@overload
def Extends(cls: Literal['VisualShaderNodeParticleSphereEmitter']) -> type[ExtendsHint[VisualShaderNodeParticleSphereEmitter]]: ...
@overload
def Extends(cls: Literal['VisualShaderNodeProximityFade']) -> type[ExtendsHint[VisualShaderNodeProximityFade]]: ...
@overload
def Extends(cls: Literal['VisualShaderNodeRandomRange']) -> type[ExtendsHint[VisualShaderNodeRandomRange]]: ...
@overload
def Extends(cls: Literal['VisualShaderNodeRemap']) -> type[ExtendsHint[VisualShaderNodeRemap]]: ...
@overload
def Extends(cls: Literal['VisualShaderNodeReroute']) -> type[ExtendsHint[VisualShaderNodeReroute]]: ...
@overload
def Extends(cls: Literal['VisualShaderNodeResizableBase']) -> type[ExtendsHint[VisualShaderNodeResizableBase]]: ...
@overload
def Extends(cls: Literal['VisualShaderNodeRotationByAxis']) -> type[ExtendsHint[VisualShaderNodeRotationByAxis]]: ...
@overload
def Extends(cls: Literal['VisualShaderNodeSDFRaymarch']) -> type[ExtendsHint[VisualShaderNodeSDFRaymarch]]: ...
@overload
def Extends(cls: Literal['VisualShaderNodeSDFToScreenUV']) -> type[ExtendsHint[VisualShaderNodeSDFToScreenUV]]: ...
@overload
def Extends(cls: Literal['VisualShaderNodeSample3D']) -> type[ExtendsHint[VisualShaderNodeSample3D]]: ...
@overload
def Extends(cls: Literal['VisualShaderNodeScreenNormalWorldSpace']) -> type[ExtendsHint[VisualShaderNodeScreenNormalWorldSpace]]: ...
@overload
def Extends(cls: Literal['VisualShaderNodeScreenUVToSDF']) -> type[ExtendsHint[VisualShaderNodeScreenUVToSDF]]: ...
@overload
def Extends(cls: Literal['VisualShaderNodeSmoothStep']) -> type[ExtendsHint[VisualShaderNodeSmoothStep]]: ...
@overload
def Extends(cls: Literal['VisualShaderNodeStep']) -> type[ExtendsHint[VisualShaderNodeStep]]: ...
@overload
def Extends(cls: Literal['VisualShaderNodeSwitch']) -> type[ExtendsHint[VisualShaderNodeSwitch]]: ...
@overload
def Extends(cls: Literal['VisualShaderNodeTexture']) -> type[ExtendsHint[VisualShaderNodeTexture]]: ...
@overload
def Extends(cls: Literal['VisualShaderNodeTexture2DArray']) -> type[ExtendsHint[VisualShaderNodeTexture2DArray]]: ...
@overload
def Extends(cls: Literal['VisualShaderNodeTexture2DArrayParameter']) -> type[ExtendsHint[VisualShaderNodeTexture2DArrayParameter]]: ...
@overload
def Extends(cls: Literal['VisualShaderNodeTexture2DParameter']) -> type[ExtendsHint[VisualShaderNodeTexture2DParameter]]: ...
@overload
def Extends(cls: Literal['VisualShaderNodeTexture3D']) -> type[ExtendsHint[VisualShaderNodeTexture3D]]: ...
@overload
def Extends(cls: Literal['VisualShaderNodeTexture3DParameter']) -> type[ExtendsHint[VisualShaderNodeTexture3DParameter]]: ...
@overload
def Extends(cls: Literal['VisualShaderNodeTextureParameter']) -> type[ExtendsHint[VisualShaderNodeTextureParameter]]: ...
@overload
def Extends(cls: Literal['VisualShaderNodeTextureParameterTriplanar']) -> type[ExtendsHint[VisualShaderNodeTextureParameterTriplanar]]: ...
@overload
def Extends(cls: Literal['VisualShaderNodeTextureSDF']) -> type[ExtendsHint[VisualShaderNodeTextureSDF]]: ...
@overload
def Extends(cls: Literal['VisualShaderNodeTextureSDFNormal']) -> type[ExtendsHint[VisualShaderNodeTextureSDFNormal]]: ...
@overload
def Extends(cls: Literal['VisualShaderNodeTransformCompose']) -> type[ExtendsHint[VisualShaderNodeTransformCompose]]: ...
@overload
def Extends(cls: Literal['VisualShaderNodeTransformConstant']) -> type[ExtendsHint[VisualShaderNodeTransformConstant]]: ...
@overload
def Extends(cls: Literal['VisualShaderNodeTransformDecompose']) -> type[ExtendsHint[VisualShaderNodeTransformDecompose]]: ...
@overload
def Extends(cls: Literal['VisualShaderNodeTransformFunc']) -> type[ExtendsHint[VisualShaderNodeTransformFunc]]: ...
@overload
def Extends(cls: Literal['VisualShaderNodeTransformOp']) -> type[ExtendsHint[VisualShaderNodeTransformOp]]: ...
@overload
def Extends(cls: Literal['VisualShaderNodeTransformParameter']) -> type[ExtendsHint[VisualShaderNodeTransformParameter]]: ...
@overload
def Extends(cls: Literal['VisualShaderNodeTransformVecMult']) -> type[ExtendsHint[VisualShaderNodeTransformVecMult]]: ...
@overload
def Extends(cls: Literal['VisualShaderNodeUIntConstant']) -> type[ExtendsHint[VisualShaderNodeUIntConstant]]: ...
@overload
def Extends(cls: Literal['VisualShaderNodeUIntFunc']) -> type[ExtendsHint[VisualShaderNodeUIntFunc]]: ...
@overload
def Extends(cls: Literal['VisualShaderNodeUIntOp']) -> type[ExtendsHint[VisualShaderNodeUIntOp]]: ...
@overload
def Extends(cls: Literal['VisualShaderNodeUIntParameter']) -> type[ExtendsHint[VisualShaderNodeUIntParameter]]: ...
@overload
def Extends(cls: Literal['VisualShaderNodeUVFunc']) -> type[ExtendsHint[VisualShaderNodeUVFunc]]: ...
@overload
def Extends(cls: Literal['VisualShaderNodeUVPolarCoord']) -> type[ExtendsHint[VisualShaderNodeUVPolarCoord]]: ...
@overload
def Extends(cls: Literal['VisualShaderNodeVarying']) -> type[ExtendsHint[VisualShaderNodeVarying]]: ...
@overload
def Extends(cls: Literal['VisualShaderNodeVaryingGetter']) -> type[ExtendsHint[VisualShaderNodeVaryingGetter]]: ...
@overload
def Extends(cls: Literal['VisualShaderNodeVaryingSetter']) -> type[ExtendsHint[VisualShaderNodeVaryingSetter]]: ...
@overload
def Extends(cls: Literal['VisualShaderNodeVec2Constant']) -> type[ExtendsHint[VisualShaderNodeVec2Constant]]: ...
@overload
def Extends(cls: Literal['VisualShaderNodeVec2Parameter']) -> type[ExtendsHint[VisualShaderNodeVec2Parameter]]: ...
@overload
def Extends(cls: Literal['VisualShaderNodeVec3Constant']) -> type[ExtendsHint[VisualShaderNodeVec3Constant]]: ...
@overload
def Extends(cls: Literal['VisualShaderNodeVec3Parameter']) -> type[ExtendsHint[VisualShaderNodeVec3Parameter]]: ...
@overload
def Extends(cls: Literal['VisualShaderNodeVec4Constant']) -> type[ExtendsHint[VisualShaderNodeVec4Constant]]: ...
@overload
def Extends(cls: Literal['VisualShaderNodeVec4Parameter']) -> type[ExtendsHint[VisualShaderNodeVec4Parameter]]: ...
@overload
def Extends(cls: Literal['VisualShaderNodeVectorBase']) -> type[ExtendsHint[VisualShaderNodeVectorBase]]: ...
@overload
def Extends(cls: Literal['VisualShaderNodeVectorCompose']) -> type[ExtendsHint[VisualShaderNodeVectorCompose]]: ...
@overload
def Extends(cls: Literal['VisualShaderNodeVectorDecompose']) -> type[ExtendsHint[VisualShaderNodeVectorDecompose]]: ...
@overload
def Extends(cls: Literal['VisualShaderNodeVectorDistance']) -> type[ExtendsHint[VisualShaderNodeVectorDistance]]: ...
@overload
def Extends(cls: Literal['VisualShaderNodeVectorFunc']) -> type[ExtendsHint[VisualShaderNodeVectorFunc]]: ...
@overload
def Extends(cls: Literal['VisualShaderNodeVectorLen']) -> type[ExtendsHint[VisualShaderNodeVectorLen]]: ...
@overload
def Extends(cls: Literal['VisualShaderNodeVectorOp']) -> type[ExtendsHint[VisualShaderNodeVectorOp]]: ...
@overload
def Extends(cls: Literal['VisualShaderNodeVectorRefract']) -> type[ExtendsHint[VisualShaderNodeVectorRefract]]: ...
@overload
def Extends(cls: Literal['VisualShaderNodeWorldPositionFromDepth']) -> type[ExtendsHint[VisualShaderNodeWorldPositionFromDepth]]: ...
@overload
def Extends(cls: Literal['VoxelGI']) -> type[ExtendsHint[VoxelGI]]: ...
@overload
def Extends(cls: Literal['VoxelGIData']) -> type[ExtendsHint[VoxelGIData]]: ...
@overload
def Extends(cls: Literal['WeakRef']) -> type[ExtendsHint[WeakRef]]: ...
@overload
def Extends(cls: Literal['WebRTCDataChannel']) -> type[ExtendsHint[WebRTCDataChannel]]: ...
@overload
def Extends(cls: Literal['WebRTCDataChannelExtension']) -> type[ExtendsHint[WebRTCDataChannelExtension]]: ...
@overload
def Extends(cls: Literal['WebRTCMultiplayerPeer']) -> type[ExtendsHint[WebRTCMultiplayerPeer]]: ...
@overload
def Extends(cls: Literal['WebRTCPeerConnection']) -> type[ExtendsHint[WebRTCPeerConnection]]: ...
@overload
def Extends(cls: Literal['WebRTCPeerConnectionExtension']) -> type[ExtendsHint[WebRTCPeerConnectionExtension]]: ...
@overload
def Extends(cls: Literal['WebSocketMultiplayerPeer']) -> type[ExtendsHint[WebSocketMultiplayerPeer]]: ...
@overload
def Extends(cls: Literal['WebSocketPeer']) -> type[ExtendsHint[WebSocketPeer]]: ...
@overload
def Extends(cls: Literal['WebXRInterface']) -> type[ExtendsHint[WebXRInterface]]: ...
@overload
def Extends(cls: Literal['Window']) -> type[ExtendsHint[Window]]: ...
@overload
def Extends(cls: Literal['WorkerThreadPool']) -> type[ExtendsHint[WorkerThreadPool]]: ...
@overload
def Extends(cls: Literal['World2D']) -> type[ExtendsHint[World2D]]: ...
@overload
def Extends(cls: Literal['World3D']) -> type[ExtendsHint[World3D]]: ...
@overload
def Extends(cls: Literal['WorldBoundaryShape2D']) -> type[ExtendsHint[WorldBoundaryShape2D]]: ...
@overload
def Extends(cls: Literal['WorldBoundaryShape3D']) -> type[ExtendsHint[WorldBoundaryShape3D]]: ...
@overload
def Extends(cls: Literal['WorldEnvironment']) -> type[ExtendsHint[WorldEnvironment]]: ...
@overload
def Extends(cls: Literal['X509Certificate']) -> type[ExtendsHint[X509Certificate]]: ...
@overload
def Extends(cls: Literal['XMLParser']) -> type[ExtendsHint[XMLParser]]: ...
@overload
def Extends(cls: Literal['XRAnchor3D']) -> type[ExtendsHint[XRAnchor3D]]: ...
@overload
def Extends(cls: Literal['XRBodyModifier3D']) -> type[ExtendsHint[XRBodyModifier3D]]: ...
@overload
def Extends(cls: Literal['XRBodyTracker']) -> type[ExtendsHint[XRBodyTracker]]: ...
@overload
def Extends(cls: Literal['XRCamera3D']) -> type[ExtendsHint[XRCamera3D]]: ...
@overload
def Extends(cls: Literal['XRController3D']) -> type[ExtendsHint[XRController3D]]: ...
@overload
def Extends(cls: Literal['XRControllerTracker']) -> type[ExtendsHint[XRControllerTracker]]: ...
@overload
def Extends(cls: Literal['XRFaceModifier3D']) -> type[ExtendsHint[XRFaceModifier3D]]: ...
@overload
def Extends(cls: Literal['XRFaceTracker']) -> type[ExtendsHint[XRFaceTracker]]: ...
@overload
def Extends(cls: Literal['XRHandModifier3D']) -> type[ExtendsHint[XRHandModifier3D]]: ...
@overload
def Extends(cls: Literal['XRHandTracker']) -> type[ExtendsHint[XRHandTracker]]: ...
@overload
def Extends(cls: Literal['XRInterface']) -> type[ExtendsHint[XRInterface]]: ...
@overload
def Extends(cls: Literal['XRInterfaceExtension']) -> type[ExtendsHint[XRInterfaceExtension]]: ...
@overload
def Extends(cls: Literal['XRNode3D']) -> type[ExtendsHint[XRNode3D]]: ...
@overload
def Extends(cls: Literal['XROrigin3D']) -> type[ExtendsHint[XROrigin3D]]: ...
@overload
def Extends(cls: Literal['XRPose']) -> type[ExtendsHint[XRPose]]: ...
@overload
def Extends(cls: Literal['XRPositionalTracker']) -> type[ExtendsHint[XRPositionalTracker]]: ...
@overload
def Extends(cls: Literal['XRServer']) -> type[ExtendsHint[XRServer]]: ...
@overload
def Extends(cls: Literal['XRTracker']) -> type[ExtendsHint[XRTracker]]: ...
@overload
def Extends(cls: Literal['XRVRS']) -> type[ExtendsHint[XRVRS]]: ...
@overload
def Extends(cls: Literal['ZIPPacker']) -> type[ExtendsHint[ZIPPacker]]: ...
@overload
def Extends(cls: Literal['ZIPReader']) -> type[ExtendsHint[ZIPReader]]: ...
BuiltinClassGroup0 = Literal['Nil', 'bool', 'int', 'float', 'String', 'Vector2', 'Vector2i', 'Rect2', 'Rect2i', 'Vector3', 'Vector3i', 'Transform2D', 'Vector4', 'Vector4i', 'Plane', 'Quaternion', 'AABB', 'Basis', 'Transform3D', 'Projection', 'Color', 'StringName', 'NodePath', 'RID', 'Callable', 'Signal', 'Dictionary', 'Array', 'PackedByteArray', 'PackedInt32Array', 'PackedInt64Array', 'PackedFloat32Array', 'PackedFloat64Array', 'PackedStringArray', 'PackedVector2Array', 'PackedVector3Array', 'PackedColorArray', 'PackedVector4Array']
CGNativeClassGroup0 = Literal['AESContext', 'AStar2D', 'AStar3D', 'AStarGrid2D', 'AcceptDialog', 'AnimatableBody2D', 'AnimatableBody3D', 'AnimatedSprite2D', 'AnimatedSprite3D', 'AnimatedTexture', 'Animation', 'AnimationLibrary', 'AnimationMixer', 'AnimationNode', 'AnimationNodeAdd2', 'AnimationNodeAdd3', 'AnimationNodeAnimation', 'AnimationNodeBlend2', 'AnimationNodeBlend3', 'AnimationNodeBlendSpace1D', 'AnimationNodeBlendSpace2D', 'AnimationNodeBlendTree', 'AnimationNodeExtension', 'AnimationNodeOneShot', 'AnimationNodeOutput', 'AnimationNodeStateMachine', 'AnimationNodeStateMachinePlayback', 'AnimationNodeStateMachineTransition', 'AnimationNodeSub2', 'AnimationNodeSync', 'AnimationNodeTimeScale', 'AnimationNodeTimeSeek', 'AnimationNodeTransition', 'AnimationPlayer', 'AnimationRootNode', 'AnimationTree', 'Area2D', 'Area3D', 'ArrayMesh', 'ArrayOccluder3D', 'AspectRatioContainer', 'AtlasTexture', 'AudioBusLayout', 'AudioEffect', 'AudioEffectAmplify', 'AudioEffectBandLimitFilter', 'AudioEffectBandPassFilter', 'AudioEffectCapture', 'AudioEffectChorus', 'AudioEffectCompressor']
CGNativeClassGroup1 = Literal['AudioEffectDelay', 'AudioEffectDistortion', 'AudioEffectEQ', 'AudioEffectEQ10', 'AudioEffectEQ21', 'AudioEffectEQ6', 'AudioEffectFilter', 'AudioEffectHardLimiter', 'AudioEffectHighPassFilter', 'AudioEffectHighShelfFilter', 'AudioEffectInstance', 'AudioEffectLimiter', 'AudioEffectLowPassFilter', 'AudioEffectLowShelfFilter', 'AudioEffectNotchFilter', 'AudioEffectPanner', 'AudioEffectPhaser', 'AudioEffectPitchShift', 'AudioEffectRecord', 'AudioEffectReverb', 'AudioEffectSpectrumAnalyzer', 'AudioEffectSpectrumAnalyzerInstance', 'AudioEffectStereoEnhance', 'AudioListener2D', 'AudioListener3D', 'AudioSample', 'AudioSamplePlayback', 'AudioServer', 'AudioStream', 'AudioStreamGenerator', 'AudioStreamGeneratorPlayback', 'AudioStreamInteractive', 'AudioStreamMP3', 'AudioStreamMicrophone', 'AudioStreamOggVorbis', 'AudioStreamPlayback', 'AudioStreamPlaybackInteractive', 'AudioStreamPlaybackOggVorbis', 'AudioStreamPlaybackPlaylist', 'AudioStreamPlaybackPolyphonic', 'AudioStreamPlaybackResampled', 'AudioStreamPlaybackSynchronized', 'AudioStreamPlayer', 'AudioStreamPlayer2D', 'AudioStreamPlayer3D', 'AudioStreamPlaylist', 'AudioStreamPolyphonic', 'AudioStreamRandomizer', 'AudioStreamSynchronized', 'AudioStreamWAV']
CGNativeClassGroup2 = Literal['BackBufferCopy', 'BaseButton', 'BaseMaterial3D', 'BitMap', 'Bone2D', 'BoneAttachment3D', 'BoneMap', 'BoxContainer', 'BoxMesh', 'BoxOccluder3D', 'BoxShape3D', 'Button', 'ButtonGroup', 'CPUParticles2D', 'CPUParticles3D', 'CSGBox3D', 'CSGCombiner3D', 'CSGCylinder3D', 'CSGMesh3D', 'CSGPolygon3D', 'CSGPrimitive3D', 'CSGShape3D', 'CSGSphere3D', 'CSGTorus3D', 'CallbackTweener', 'Camera2D', 'Camera3D', 'CameraAttributes', 'CameraAttributesPhysical', 'CameraAttributesPractical', 'CameraFeed', 'CameraServer', 'CameraTexture', 'CanvasGroup', 'CanvasItem', 'CanvasItemMaterial', 'CanvasLayer', 'CanvasModulate', 'CanvasTexture', 'CapsuleMesh', 'CapsuleShape2D', 'CapsuleShape3D', 'CenterContainer', 'CharFXTransform', 'CharacterBody2D', 'CharacterBody3D', 'CheckBox', 'CheckButton', 'CircleShape2D', 'ClassDB']
CGNativeClassGroup3 = Literal['CodeEdit', 'CodeHighlighter', 'CollisionObject2D', 'CollisionObject3D', 'CollisionPolygon2D', 'CollisionPolygon3D', 'CollisionShape2D', 'CollisionShape3D', 'ColorPalette', 'ColorPicker', 'ColorPickerButton', 'ColorRect', 'Compositor', 'CompositorEffect', 'CompressedCubemap', 'CompressedCubemapArray', 'CompressedTexture2D', 'CompressedTexture2DArray', 'CompressedTexture3D', 'CompressedTextureLayered', 'ConcavePolygonShape2D', 'ConcavePolygonShape3D', 'ConeTwistJoint3D', 'ConfigFile', 'ConfirmationDialog', 'Container', 'Control', 'ConvexPolygonShape2D', 'ConvexPolygonShape3D', 'Crypto', 'CryptoKey', 'Cubemap', 'CubemapArray', 'Curve', 'Curve2D', 'Curve3D', 'CurveTexture', 'CurveXYZTexture', 'CylinderMesh', 'CylinderShape3D', 'DTLSServer', 'DampedSpringJoint2D', 'Decal', 'DirAccess', 'DirectionalLight2D', 'DirectionalLight3D', 'DisplayServer', 'ENetConnection', 'ENetMultiplayerPeer', 'ENetPacketPeer']
CGNativeClassGroup4 = Literal['EditorCommandPalette', 'EditorContextMenuPlugin', 'EditorDebuggerPlugin', 'EditorDebuggerSession', 'EditorExportPlatform', 'EditorExportPlatformAndroid', 'EditorExportPlatformExtension', 'EditorExportPlatformIOS', 'EditorExportPlatformLinuxBSD', 'EditorExportPlatformMacOS', 'EditorExportPlatformPC', 'EditorExportPlatformWeb', 'EditorExportPlatformWindows', 'EditorExportPlugin', 'EditorExportPreset', 'EditorFeatureProfile', 'EditorFileDialog', 'EditorFileSystem', 'EditorFileSystemDirectory', 'EditorFileSystemImportFormatSupportQuery', 'EditorImportPlugin', 'EditorInspector', 'EditorInspectorPlugin', 'EditorInterface', 'EditorNode3DGizmo', 'EditorNode3DGizmoPlugin', 'EditorPaths', 'EditorPlugin', 'EditorProperty', 'EditorResourceConversionPlugin', 'EditorResourcePicker', 'EditorResourcePreview', 'EditorResourcePreviewGenerator', 'EditorResourceTooltipPlugin', 'EditorSceneFormatImporter', 'EditorSceneFormatImporterBlend', 'EditorSceneFormatImporterFBX2GLTF', 'EditorSceneFormatImporterGLTF', 'EditorSceneFormatImporterUFBX', 'EditorScenePostImport', 'EditorScenePostImportPlugin', 'EditorScript', 'EditorScriptPicker', 'EditorSelection', 'EditorSettings', 'EditorSpinSlider', 'EditorSyntaxHighlighter', 'EditorToaster', 'EditorTranslationParserPlugin', 'EditorUndoRedoManager']
CGNativeClassGroup5 = Literal['EditorVCSInterface', 'EncodedObjectAsID', 'Engine', 'EngineDebugger', 'EngineProfiler', 'Environment', 'Expression', 'ExternalTexture', 'FBXDocument', 'FBXState', 'FastNoiseLite', 'FileAccess', 'FileDialog', 'FileSystemDock', 'FlowContainer', 'FogMaterial', 'FogVolume', 'Font', 'FontFile', 'FontVariation', 'FramebufferCacheRD', 'GDExtension', 'GDExtensionManager', 'GDScript', 'GDScriptSyntaxHighlighter', 'GLTFAccessor', 'GLTFAnimation', 'GLTFBufferView', 'GLTFCamera', 'GLTFDocument', 'GLTFDocumentExtension', 'GLTFDocumentExtensionConvertImporterMesh', 'GLTFLight', 'GLTFMesh', 'GLTFNode', 'GLTFObjectModelProperty', 'GLTFPhysicsBody', 'GLTFPhysicsShape', 'GLTFSkeleton', 'GLTFSkin', 'GLTFSpecGloss', 'GLTFState', 'GLTFTexture', 'GLTFTextureSampler', 'GPUParticles2D', 'GPUParticles3D', 'GPUParticlesAttractor3D', 'GPUParticlesAttractorBox3D', 'GPUParticlesAttractorSphere3D', 'GPUParticlesAttractorVectorField3D']
CGNativeClassGroup6 = Literal['GPUParticlesCollision3D', 'GPUParticlesCollisionBox3D', 'GPUParticlesCollisionHeightField3D', 'GPUParticlesCollisionSDF3D', 'GPUParticlesCollisionSphere3D', 'Generic6DOFJoint3D', 'Geometry2D', 'Geometry3D', 'GeometryInstance3D', 'Gradient', 'GradientTexture1D', 'GradientTexture2D', 'GraphEdit', 'GraphElement', 'GraphFrame', 'GraphNode', 'GridContainer', 'GridMap', 'GridMapEditorPlugin', 'GrooveJoint2D', 'HBoxContainer', 'HFlowContainer', 'HMACContext', 'HScrollBar', 'HSeparator', 'HSlider', 'HSplitContainer', 'HTTPClient', 'HTTPRequest', 'HashingContext', 'HeightMapShape3D', 'HingeJoint3D', 'IP', 'Image', 'ImageFormatLoader', 'ImageFormatLoaderExtension', 'ImageTexture', 'ImageTexture3D', 'ImageTextureLayered', 'ImmediateMesh', 'ImporterMesh', 'ImporterMeshInstance3D', 'Input', 'InputEvent', 'InputEventAction', 'InputEventFromWindow', 'InputEventGesture', 'InputEventJoypadButton', 'InputEventJoypadMotion', 'InputEventKey']
CGNativeClassGroup7 = Literal['InputEventMIDI', 'InputEventMagnifyGesture', 'InputEventMouse', 'InputEventMouseButton', 'InputEventMouseMotion', 'InputEventPanGesture', 'InputEventScreenDrag', 'InputEventScreenTouch', 'InputEventShortcut', 'InputEventWithModifiers', 'InputMap', 'InstancePlaceholder', 'IntervalTweener', 'ItemList', 'JNISingleton', 'JSON', 'JSONRPC', 'JavaClass', 'JavaClassWrapper', 'JavaObject', 'JavaScriptBridge', 'JavaScriptObject', 'Joint2D', 'Joint3D', 'KinematicCollision2D', 'KinematicCollision3D', 'Label', 'Label3D', 'LabelSettings', 'Light2D', 'Light3D', 'LightOccluder2D', 'LightmapGI', 'LightmapGIData', 'LightmapProbe', 'Lightmapper', 'LightmapperRD', 'Line2D', 'LineEdit', 'LinkButton', 'LookAtModifier3D', 'MainLoop', 'MarginContainer', 'Marker2D', 'Marker3D', 'Marshalls', 'Material', 'MenuBar', 'MenuButton', 'Mesh']
CGNativeClassGroup8 = Literal['MeshConvexDecompositionSettings', 'MeshDataTool', 'MeshInstance2D', 'MeshInstance3D', 'MeshLibrary', 'MeshTexture', 'MethodTweener', 'MissingNode', 'MissingResource', 'MobileVRInterface', 'MovieWriter', 'MultiMesh', 'MultiMeshInstance2D', 'MultiMeshInstance3D', 'MultiplayerAPI', 'MultiplayerAPIExtension', 'MultiplayerPeer', 'MultiplayerPeerExtension', 'MultiplayerSpawner', 'MultiplayerSynchronizer', 'Mutex', 'NativeMenu', 'NavigationAgent2D', 'NavigationAgent3D', 'NavigationLink2D', 'NavigationLink3D', 'NavigationMesh', 'NavigationMeshGenerator', 'NavigationMeshSourceGeometryData2D', 'NavigationMeshSourceGeometryData3D', 'NavigationObstacle2D', 'NavigationObstacle3D', 'NavigationPathQueryParameters2D', 'NavigationPathQueryParameters3D', 'NavigationPathQueryResult2D', 'NavigationPathQueryResult3D', 'NavigationPolygon', 'NavigationRegion2D', 'NavigationRegion3D', 'NavigationServer2D', 'NavigationServer3D', 'NinePatchRect', 'Node', 'Node2D', 'Node3D', 'Node3DGizmo', 'Noise', 'NoiseTexture2D', 'NoiseTexture3D', 'ORMMaterial3D']
CGNativeClassGroup9 = Literal['OS', 'Object', 'Occluder3D', 'OccluderInstance3D', 'OccluderPolygon2D', 'OfflineMultiplayerPeer', 'OggPacketSequence', 'OggPacketSequencePlayback', 'OmniLight3D', 'OpenXRAPIExtension', 'OpenXRAction', 'OpenXRActionBindingModifier', 'OpenXRActionMap', 'OpenXRActionSet', 'OpenXRAnalogThresholdModifier', 'OpenXRBindingModifier', 'OpenXRBindingModifierEditor', 'OpenXRCompositionLayer', 'OpenXRCompositionLayerCylinder', 'OpenXRCompositionLayerEquirect', 'OpenXRCompositionLayerQuad', 'OpenXRDpadBindingModifier', 'OpenXRExtensionWrapperExtension', 'OpenXRHand', 'OpenXRHapticBase', 'OpenXRHapticVibration', 'OpenXRIPBinding', 'OpenXRIPBindingModifier', 'OpenXRInteractionProfile', 'OpenXRInteractionProfileEditor', 'OpenXRInteractionProfileEditorBase', 'OpenXRInteractionProfileMetadata', 'OpenXRInterface', 'OpenXRVisibilityMask', 'OptimizedTranslation', 'OptionButton', 'PCKPacker', 'PackedDataContainer', 'PackedDataContainerRef', 'PackedScene', 'PacketPeer', 'PacketPeerDTLS', 'PacketPeerExtension', 'PacketPeerStream', 'PacketPeerUDP', 'Panel', 'PanelContainer', 'PanoramaSkyMaterial', 'Parallax2D', 'ParallaxBackground']
CGNativeClassGroup10 = Literal['ParallaxLayer', 'ParticleProcessMaterial', 'Path2D', 'Path3D', 'PathFollow2D', 'PathFollow3D', 'Performance', 'PhysicalBone2D', 'PhysicalBone3D', 'PhysicalBoneSimulator3D', 'PhysicalSkyMaterial', 'PhysicsBody2D', 'PhysicsBody3D', 'PhysicsDirectBodyState2D', 'PhysicsDirectBodyState2DExtension', 'PhysicsDirectBodyState3D', 'PhysicsDirectBodyState3DExtension', 'PhysicsDirectSpaceState2D', 'PhysicsDirectSpaceState2DExtension', 'PhysicsDirectSpaceState3D', 'PhysicsDirectSpaceState3DExtension', 'PhysicsMaterial', 'PhysicsPointQueryParameters2D', 'PhysicsPointQueryParameters3D', 'PhysicsRayQueryParameters2D', 'PhysicsRayQueryParameters3D', 'PhysicsServer2D', 'PhysicsServer2DExtension', 'PhysicsServer2DManager', 'PhysicsServer3D', 'PhysicsServer3DExtension', 'PhysicsServer3DManager', 'PhysicsServer3DRenderingServerHandler', 'PhysicsShapeQueryParameters2D', 'PhysicsShapeQueryParameters3D', 'PhysicsTestMotionParameters2D', 'PhysicsTestMotionParameters3D', 'PhysicsTestMotionResult2D', 'PhysicsTestMotionResult3D', 'PinJoint2D', 'PinJoint3D', 'PlaceholderCubemap', 'PlaceholderCubemapArray', 'PlaceholderMaterial', 'PlaceholderMesh', 'PlaceholderTexture2D', 'PlaceholderTexture2DArray', 'PlaceholderTexture3D', 'PlaceholderTextureLayered', 'PlaneMesh']
CGNativeClassGroup11 = Literal['PointLight2D', 'PointMesh', 'Polygon2D', 'PolygonOccluder3D', 'PolygonPathFinder', 'Popup', 'PopupMenu', 'PopupPanel', 'PortableCompressedTexture2D', 'PrimitiveMesh', 'PrismMesh', 'ProceduralSkyMaterial', 'ProgressBar', 'ProjectSettings', 'PropertyTweener', 'QuadMesh', 'QuadOccluder3D', 'RDAttachmentFormat', 'RDFramebufferPass', 'RDPipelineColorBlendState', 'RDPipelineColorBlendStateAttachment', 'RDPipelineDepthStencilState', 'RDPipelineMultisampleState', 'RDPipelineRasterizationState', 'RDPipelineSpecializationConstant', 'RDSamplerState', 'RDShaderFile', 'RDShaderSPIRV', 'RDShaderSource', 'RDTextureFormat', 'RDTextureView', 'RDUniform', 'RDVertexAttribute', 'RandomNumberGenerator', 'Range', 'RayCast2D', 'RayCast3D', 'RectangleShape2D', 'RefCounted', 'ReferenceRect', 'ReflectionProbe', 'RegEx', 'RegExMatch', 'RemoteTransform2D', 'RemoteTransform3D', 'RenderData', 'RenderDataExtension', 'RenderDataRD', 'RenderSceneBuffers', 'RenderSceneBuffersConfiguration']
CGNativeClassGroup12 = Literal['RenderSceneBuffersExtension', 'RenderSceneBuffersRD', 'RenderSceneData', 'RenderSceneDataExtension', 'RenderSceneDataRD', 'RenderingDevice', 'RenderingServer', 'Resource', 'ResourceFormatLoader', 'ResourceFormatSaver', 'ResourceImporter', 'ResourceImporterBMFont', 'ResourceImporterBitMap', 'ResourceImporterCSVTranslation', 'ResourceImporterDynamicFont', 'ResourceImporterImage', 'ResourceImporterImageFont', 'ResourceImporterLayeredTexture', 'ResourceImporterMP3', 'ResourceImporterOBJ', 'ResourceImporterOggVorbis', 'ResourceImporterScene', 'ResourceImporterShaderFile', 'ResourceImporterTexture', 'ResourceImporterTextureAtlas', 'ResourceImporterWAV', 'ResourceLoader', 'ResourcePreloader', 'ResourceSaver', 'ResourceUID', 'RetargetModifier3D', 'RibbonTrailMesh', 'RichTextEffect', 'RichTextLabel', 'RigidBody2D', 'RigidBody3D', 'RootMotionView', 'SceneMultiplayer', 'SceneReplicationConfig', 'SceneState', 'SceneTree', 'SceneTreeTimer', 'Script', 'ScriptCreateDialog', 'ScriptEditor', 'ScriptEditorBase', 'ScriptExtension', 'ScriptLanguage', 'ScriptLanguageExtension', 'ScrollBar']
CGNativeClassGroup13 = Literal['ScrollContainer', 'SegmentShape2D', 'Semaphore', 'SeparationRayShape2D', 'SeparationRayShape3D', 'Separator', 'Shader', 'ShaderGlobalsOverride', 'ShaderInclude', 'ShaderIncludeDB', 'ShaderMaterial', 'Shape2D', 'Shape3D', 'ShapeCast2D', 'ShapeCast3D', 'Shortcut', 'Skeleton2D', 'Skeleton3D', 'SkeletonIK3D', 'SkeletonModification2D', 'SkeletonModification2DCCDIK', 'SkeletonModification2DFABRIK', 'SkeletonModification2DJiggle', 'SkeletonModification2DLookAt', 'SkeletonModification2DPhysicalBones', 'SkeletonModification2DStackHolder', 'SkeletonModification2DTwoBoneIK', 'SkeletonModificationStack2D', 'SkeletonModifier3D', 'SkeletonProfile', 'SkeletonProfileHumanoid', 'Skin', 'SkinReference', 'Sky', 'Slider', 'SliderJoint3D', 'SoftBody3D', 'SphereMesh', 'SphereOccluder3D', 'SphereShape3D', 'SpinBox', 'SplitContainer', 'SpotLight3D', 'SpringArm3D', 'SpringBoneCollision3D', 'SpringBoneCollisionCapsule3D', 'SpringBoneCollisionPlane3D', 'SpringBoneCollisionSphere3D', 'SpringBoneSimulator3D', 'Sprite2D']
CGNativeClassGroup14 = Literal['Sprite3D', 'SpriteBase3D', 'SpriteFrames', 'StandardMaterial3D', 'StaticBody2D', 'StaticBody3D', 'StatusIndicator', 'StreamPeer', 'StreamPeerBuffer', 'StreamPeerExtension', 'StreamPeerGZIP', 'StreamPeerTCP', 'StreamPeerTLS', 'StyleBox', 'StyleBoxEmpty', 'StyleBoxFlat', 'StyleBoxLine', 'StyleBoxTexture', 'SubViewport', 'SubViewportContainer', 'SubtweenTweener', 'SurfaceTool', 'SyntaxHighlighter', 'SystemFont', 'TCPServer', 'TLSOptions', 'TabBar', 'TabContainer', 'TextEdit', 'TextLine', 'TextMesh', 'TextParagraph', 'TextServer', 'TextServerAdvanced', 'TextServerDummy', 'TextServerExtension', 'TextServerManager', 'Texture', 'Texture2D', 'Texture2DArray', 'Texture2DArrayRD', 'Texture2DRD', 'Texture3D', 'Texture3DRD', 'TextureButton', 'TextureCubemapArrayRD', 'TextureCubemapRD', 'TextureLayered', 'TextureLayeredRD', 'TextureProgressBar']
CGNativeClassGroup15 = Literal['TextureRect', 'Theme', 'ThemeDB', 'Thread', 'TileData', 'TileMap', 'TileMapLayer', 'TileMapPattern', 'TileSet', 'TileSetAtlasSource', 'TileSetScenesCollectionSource', 'TileSetSource', 'Time', 'Timer', 'TorusMesh', 'TouchScreenButton', 'Translation', 'TranslationDomain', 'TranslationServer', 'Tree', 'TreeItem', 'TriangleMesh', 'TubeTrailMesh', 'Tween', 'Tweener', 'UDPServer', 'UPNP', 'UPNPDevice', 'UndoRedo', 'UniformSetCacheRD', 'VBoxContainer', 'VFlowContainer', 'VScrollBar', 'VSeparator', 'VSlider', 'VSplitContainer', 'VehicleBody3D', 'VehicleWheel3D', 'VideoStream', 'VideoStreamPlayback', 'VideoStreamPlayer', 'VideoStreamTheora', 'Viewport', 'ViewportTexture', 'VisibleOnScreenEnabler2D', 'VisibleOnScreenEnabler3D', 'VisibleOnScreenNotifier2D', 'VisibleOnScreenNotifier3D', 'VisualInstance3D', 'VisualShader']
CGNativeClassGroup16 = Literal['VisualShaderNode', 'VisualShaderNodeBillboard', 'VisualShaderNodeBooleanConstant', 'VisualShaderNodeBooleanParameter', 'VisualShaderNodeClamp', 'VisualShaderNodeColorConstant', 'VisualShaderNodeColorFunc', 'VisualShaderNodeColorOp', 'VisualShaderNodeColorParameter', 'VisualShaderNodeComment', 'VisualShaderNodeCompare', 'VisualShaderNodeConstant', 'VisualShaderNodeCubemap', 'VisualShaderNodeCubemapParameter', 'VisualShaderNodeCurveTexture', 'VisualShaderNodeCurveXYZTexture', 'VisualShaderNodeCustom', 'VisualShaderNodeDerivativeFunc', 'VisualShaderNodeDeterminant', 'VisualShaderNodeDistanceFade', 'VisualShaderNodeDotProduct', 'VisualShaderNodeExpression', 'VisualShaderNodeFaceForward', 'VisualShaderNodeFloatConstant', 'VisualShaderNodeFloatFunc', 'VisualShaderNodeFloatOp', 'VisualShaderNodeFloatParameter', 'VisualShaderNodeFrame', 'VisualShaderNodeFresnel', 'VisualShaderNodeGlobalExpression', 'VisualShaderNodeGroupBase', 'VisualShaderNodeIf', 'VisualShaderNodeInput', 'VisualShaderNodeIntConstant', 'VisualShaderNodeIntFunc', 'VisualShaderNodeIntOp', 'VisualShaderNodeIntParameter', 'VisualShaderNodeIs', 'VisualShaderNodeLinearSceneDepth', 'VisualShaderNodeMix', 'VisualShaderNodeMultiplyAdd', 'VisualShaderNodeOuterProduct', 'VisualShaderNodeOutput', 'VisualShaderNodeParameter', 'VisualShaderNodeParameterRef', 'VisualShaderNodeParticleAccelerator', 'VisualShaderNodeParticleBoxEmitter', 'VisualShaderNodeParticleConeVelocity', 'VisualShaderNodeParticleEmit', 'VisualShaderNodeParticleEmitter']
CGNativeClassGroup17 = Literal['VisualShaderNodeParticleMeshEmitter', 'VisualShaderNodeParticleMultiplyByAxisAngle', 'VisualShaderNodeParticleOutput', 'VisualShaderNodeParticleRandomness', 'VisualShaderNodeParticleRingEmitter', 'VisualShaderNodeParticleSphereEmitter', 'VisualShaderNodeProximityFade', 'VisualShaderNodeRandomRange', 'VisualShaderNodeRemap', 'VisualShaderNodeReroute', 'VisualShaderNodeResizableBase', 'VisualShaderNodeRotationByAxis', 'VisualShaderNodeSDFRaymarch', 'VisualShaderNodeSDFToScreenUV', 'VisualShaderNodeSample3D', 'VisualShaderNodeScreenNormalWorldSpace', 'VisualShaderNodeScreenUVToSDF', 'VisualShaderNodeSmoothStep', 'VisualShaderNodeStep', 'VisualShaderNodeSwitch', 'VisualShaderNodeTexture', 'VisualShaderNodeTexture2DArray', 'VisualShaderNodeTexture2DArrayParameter', 'VisualShaderNodeTexture2DParameter', 'VisualShaderNodeTexture3D', 'VisualShaderNodeTexture3DParameter', 'VisualShaderNodeTextureParameter', 'VisualShaderNodeTextureParameterTriplanar', 'VisualShaderNodeTextureSDF', 'VisualShaderNodeTextureSDFNormal', 'VisualShaderNodeTransformCompose', 'VisualShaderNodeTransformConstant', 'VisualShaderNodeTransformDecompose', 'VisualShaderNodeTransformFunc', 'VisualShaderNodeTransformOp', 'VisualShaderNodeTransformParameter', 'VisualShaderNodeTransformVecMult', 'VisualShaderNodeUIntConstant', 'VisualShaderNodeUIntFunc', 'VisualShaderNodeUIntOp', 'VisualShaderNodeUIntParameter', 'VisualShaderNodeUVFunc', 'VisualShaderNodeUVPolarCoord', 'VisualShaderNodeVarying', 'VisualShaderNodeVaryingGetter', 'VisualShaderNodeVaryingSetter', 'VisualShaderNodeVec2Constant', 'VisualShaderNodeVec2Parameter', 'VisualShaderNodeVec3Constant', 'VisualShaderNodeVec3Parameter']
CGNativeClassGroup18 = Literal['VisualShaderNodeVec4Constant', 'VisualShaderNodeVec4Parameter', 'VisualShaderNodeVectorBase', 'VisualShaderNodeVectorCompose', 'VisualShaderNodeVectorDecompose', 'VisualShaderNodeVectorDistance', 'VisualShaderNodeVectorFunc', 'VisualShaderNodeVectorLen', 'VisualShaderNodeVectorOp', 'VisualShaderNodeVectorRefract', 'VisualShaderNodeWorldPositionFromDepth', 'VoxelGI', 'VoxelGIData', 'WeakRef', 'WebRTCDataChannel', 'WebRTCDataChannelExtension', 'WebRTCMultiplayerPeer', 'WebRTCPeerConnection', 'WebRTCPeerConnectionExtension', 'WebSocketMultiplayerPeer', 'WebSocketPeer', 'WebXRInterface', 'Window', 'WorkerThreadPool', 'World2D', 'World3D', 'WorldBoundaryShape2D', 'WorldBoundaryShape3D', 'WorldEnvironment', 'X509Certificate', 'XMLParser', 'XRAnchor3D', 'XRBodyModifier3D', 'XRBodyTracker', 'XRCamera3D', 'XRController3D', 'XRControllerTracker', 'XRFaceModifier3D', 'XRFaceTracker', 'XRHandModifier3D', 'XRHandTracker', 'XRInterface', 'XRInterfaceExtension', 'XRNode3D', 'XROrigin3D', 'XRPose', 'XRPositionalTracker', 'XRServer', 'XRTracker', 'XRVRS']
CGNativeClassGroup19 = Literal['ZIPPacker', 'ZIPReader']
BuiltinClass = BuiltinClassGroup0
CGNativeClass = CGNativeClassGroup0 | CGNativeClassGroup1 | CGNativeClassGroup2 | CGNativeClassGroup3 | CGNativeClassGroup4 | CGNativeClassGroup5 | CGNativeClassGroup6 | CGNativeClassGroup7 | CGNativeClassGroup8 | CGNativeClassGroup9 | CGNativeClassGroup10 | CGNativeClassGroup11 | CGNativeClassGroup12 | CGNativeClassGroup13 | CGNativeClassGroup14 | CGNativeClassGroup15 | CGNativeClassGroup16 | CGNativeClassGroup17 | CGNativeClassGroup18 | CGNativeClassGroup19
@overload
def export(cls: BuiltinClass): ...
@overload
def Extends(cls: CGNativeClass): ...
